// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package service

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - URL
//  - Content
//  - ReqContent
//  - ExpireSeconds
type QrRespone struct {
  URL string `thrift:"Url,1" db:"Url" json:"Url"`
  Content string `thrift:"Content,2" db:"Content" json:"Content"`
  ReqContent string `thrift:"ReqContent,3" db:"ReqContent" json:"ReqContent"`
  ExpireSeconds int32 `thrift:"ExpireSeconds,4" db:"ExpireSeconds" json:"ExpireSeconds"`
}

func NewQrRespone() *QrRespone {
  return &QrRespone{}
}


func (p *QrRespone) GetURL() string {
  return p.URL
}

func (p *QrRespone) GetContent() string {
  return p.Content
}

func (p *QrRespone) GetReqContent() string {
  return p.ReqContent
}

func (p *QrRespone) GetExpireSeconds() int32 {
  return p.ExpireSeconds
}
func (p *QrRespone) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *QrRespone)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.URL = v
}
  return nil
}

func (p *QrRespone)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Content = v
}
  return nil
}

func (p *QrRespone)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.ReqContent = v
}
  return nil
}

func (p *QrRespone)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI32(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.ExpireSeconds = v
}
  return nil
}

func (p *QrRespone) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("QrRespone"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *QrRespone) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Url", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Url: ", p), err) }
  if err := oprot.WriteString(string(p.URL)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Url (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Url: ", p), err) }
  return err
}

func (p *QrRespone) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Content", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:Content: ", p), err) }
  if err := oprot.WriteString(string(p.Content)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Content (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:Content: ", p), err) }
  return err
}

func (p *QrRespone) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ReqContent", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:ReqContent: ", p), err) }
  if err := oprot.WriteString(string(p.ReqContent)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ReqContent (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:ReqContent: ", p), err) }
  return err
}

func (p *QrRespone) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ExpireSeconds", thrift.I32, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:ExpireSeconds: ", p), err) }
  if err := oprot.WriteI32(int32(p.ExpireSeconds)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ExpireSeconds (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:ExpireSeconds: ", p), err) }
  return err
}

func (p *QrRespone) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("QrRespone(%+v)", *p)
}

