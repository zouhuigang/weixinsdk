// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package service

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

// Attributes:
//  - Appid
//  - MchId
//  - DeviceInfo
//  - NonceStr
//  - Sign
//  - SignType
//  - Body
//  - Detail
//  - Attach
//  - OutTradeNo
//  - FeeType
//  - TotalFee
//  - SpbillCreateIp
//  - TimeStart
//  - TimeExpire
//  - GoodsTag
//  - NotifyUrl
//  - TradeType
//  - ProductId
//  - LimitPay
//  - Openid
//  - Receipt
//  - SceneInfo
type UnifiedOrderParam struct {
  Appid string `thrift:"Appid,1" db:"Appid" json:"Appid"`
  MchId string `thrift:"MchId,2" db:"MchId" json:"MchId"`
  DeviceInfo string `thrift:"DeviceInfo,3" db:"DeviceInfo" json:"DeviceInfo"`
  NonceStr string `thrift:"NonceStr,4" db:"NonceStr" json:"NonceStr"`
  Sign string `thrift:"Sign,5" db:"Sign" json:"Sign"`
  SignType string `thrift:"SignType,6" db:"SignType" json:"SignType"`
  Body string `thrift:"Body,7" db:"Body" json:"Body"`
  Detail string `thrift:"Detail,8" db:"Detail" json:"Detail"`
  Attach string `thrift:"Attach,9" db:"Attach" json:"Attach"`
  OutTradeNo string `thrift:"OutTradeNo,10" db:"OutTradeNo" json:"OutTradeNo"`
  FeeType string `thrift:"FeeType,11" db:"FeeType" json:"FeeType"`
  TotalFee string `thrift:"TotalFee,12" db:"TotalFee" json:"TotalFee"`
  SpbillCreateIp string `thrift:"SpbillCreateIp,13" db:"SpbillCreateIp" json:"SpbillCreateIp"`
  TimeStart string `thrift:"TimeStart,14" db:"TimeStart" json:"TimeStart"`
  TimeExpire string `thrift:"TimeExpire,15" db:"TimeExpire" json:"TimeExpire"`
  GoodsTag string `thrift:"GoodsTag,16" db:"GoodsTag" json:"GoodsTag"`
  NotifyUrl string `thrift:"NotifyUrl,17" db:"NotifyUrl" json:"NotifyUrl"`
  TradeType string `thrift:"TradeType,18" db:"TradeType" json:"TradeType"`
  ProductId string `thrift:"ProductId,19" db:"ProductId" json:"ProductId"`
  LimitPay string `thrift:"LimitPay,20" db:"LimitPay" json:"LimitPay"`
  Openid string `thrift:"Openid,21" db:"Openid" json:"Openid"`
  Receipt string `thrift:"Receipt,22" db:"Receipt" json:"Receipt"`
  SceneInfo string `thrift:"Scene_info,23" db:"Scene_info" json:"Scene_info"`
}

func NewUnifiedOrderParam() *UnifiedOrderParam {
  return &UnifiedOrderParam{}
}


func (p *UnifiedOrderParam) GetAppid() string {
  return p.Appid
}

func (p *UnifiedOrderParam) GetMchId() string {
  return p.MchId
}

func (p *UnifiedOrderParam) GetDeviceInfo() string {
  return p.DeviceInfo
}

func (p *UnifiedOrderParam) GetNonceStr() string {
  return p.NonceStr
}

func (p *UnifiedOrderParam) GetSign() string {
  return p.Sign
}

func (p *UnifiedOrderParam) GetSignType() string {
  return p.SignType
}

func (p *UnifiedOrderParam) GetBody() string {
  return p.Body
}

func (p *UnifiedOrderParam) GetDetail() string {
  return p.Detail
}

func (p *UnifiedOrderParam) GetAttach() string {
  return p.Attach
}

func (p *UnifiedOrderParam) GetOutTradeNo() string {
  return p.OutTradeNo
}

func (p *UnifiedOrderParam) GetFeeType() string {
  return p.FeeType
}

func (p *UnifiedOrderParam) GetTotalFee() string {
  return p.TotalFee
}

func (p *UnifiedOrderParam) GetSpbillCreateIp() string {
  return p.SpbillCreateIp
}

func (p *UnifiedOrderParam) GetTimeStart() string {
  return p.TimeStart
}

func (p *UnifiedOrderParam) GetTimeExpire() string {
  return p.TimeExpire
}

func (p *UnifiedOrderParam) GetGoodsTag() string {
  return p.GoodsTag
}

func (p *UnifiedOrderParam) GetNotifyUrl() string {
  return p.NotifyUrl
}

func (p *UnifiedOrderParam) GetTradeType() string {
  return p.TradeType
}

func (p *UnifiedOrderParam) GetProductId() string {
  return p.ProductId
}

func (p *UnifiedOrderParam) GetLimitPay() string {
  return p.LimitPay
}

func (p *UnifiedOrderParam) GetOpenid() string {
  return p.Openid
}

func (p *UnifiedOrderParam) GetReceipt() string {
  return p.Receipt
}

func (p *UnifiedOrderParam) GetSceneInfo() string {
  return p.SceneInfo
}
func (p *UnifiedOrderParam) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    case 7:
      if err := p.ReadField7(iprot); err != nil {
        return err
      }
    case 8:
      if err := p.ReadField8(iprot); err != nil {
        return err
      }
    case 9:
      if err := p.ReadField9(iprot); err != nil {
        return err
      }
    case 10:
      if err := p.ReadField10(iprot); err != nil {
        return err
      }
    case 11:
      if err := p.ReadField11(iprot); err != nil {
        return err
      }
    case 12:
      if err := p.ReadField12(iprot); err != nil {
        return err
      }
    case 13:
      if err := p.ReadField13(iprot); err != nil {
        return err
      }
    case 14:
      if err := p.ReadField14(iprot); err != nil {
        return err
      }
    case 15:
      if err := p.ReadField15(iprot); err != nil {
        return err
      }
    case 16:
      if err := p.ReadField16(iprot); err != nil {
        return err
      }
    case 17:
      if err := p.ReadField17(iprot); err != nil {
        return err
      }
    case 18:
      if err := p.ReadField18(iprot); err != nil {
        return err
      }
    case 19:
      if err := p.ReadField19(iprot); err != nil {
        return err
      }
    case 20:
      if err := p.ReadField20(iprot); err != nil {
        return err
      }
    case 21:
      if err := p.ReadField21(iprot); err != nil {
        return err
      }
    case 22:
      if err := p.ReadField22(iprot); err != nil {
        return err
      }
    case 23:
      if err := p.ReadField23(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *UnifiedOrderParam)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Appid = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.MchId = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.DeviceInfo = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.NonceStr = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.Sign = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField6(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 6: ", err)
} else {
  p.SignType = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField7(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 7: ", err)
} else {
  p.Body = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField8(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 8: ", err)
} else {
  p.Detail = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField9(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 9: ", err)
} else {
  p.Attach = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField10(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 10: ", err)
} else {
  p.OutTradeNo = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField11(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 11: ", err)
} else {
  p.FeeType = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField12(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 12: ", err)
} else {
  p.TotalFee = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField13(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 13: ", err)
} else {
  p.SpbillCreateIp = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField14(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 14: ", err)
} else {
  p.TimeStart = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField15(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 15: ", err)
} else {
  p.TimeExpire = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField16(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 16: ", err)
} else {
  p.GoodsTag = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField17(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 17: ", err)
} else {
  p.NotifyUrl = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField18(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 18: ", err)
} else {
  p.TradeType = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField19(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 19: ", err)
} else {
  p.ProductId = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField20(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 20: ", err)
} else {
  p.LimitPay = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField21(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 21: ", err)
} else {
  p.Openid = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField22(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 22: ", err)
} else {
  p.Receipt = v
}
  return nil
}

func (p *UnifiedOrderParam)  ReadField23(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 23: ", err)
} else {
  p.SceneInfo = v
}
  return nil
}

func (p *UnifiedOrderParam) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("UnifiedOrderParam"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
    if err := p.writeField8(oprot); err != nil { return err }
    if err := p.writeField9(oprot); err != nil { return err }
    if err := p.writeField10(oprot); err != nil { return err }
    if err := p.writeField11(oprot); err != nil { return err }
    if err := p.writeField12(oprot); err != nil { return err }
    if err := p.writeField13(oprot); err != nil { return err }
    if err := p.writeField14(oprot); err != nil { return err }
    if err := p.writeField15(oprot); err != nil { return err }
    if err := p.writeField16(oprot); err != nil { return err }
    if err := p.writeField17(oprot); err != nil { return err }
    if err := p.writeField18(oprot); err != nil { return err }
    if err := p.writeField19(oprot); err != nil { return err }
    if err := p.writeField20(oprot); err != nil { return err }
    if err := p.writeField21(oprot); err != nil { return err }
    if err := p.writeField22(oprot); err != nil { return err }
    if err := p.writeField23(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *UnifiedOrderParam) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Appid", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:Appid: ", p), err) }
  if err := oprot.WriteString(string(p.Appid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Appid (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:Appid: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("MchId", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:MchId: ", p), err) }
  if err := oprot.WriteString(string(p.MchId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.MchId (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:MchId: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("DeviceInfo", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:DeviceInfo: ", p), err) }
  if err := oprot.WriteString(string(p.DeviceInfo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.DeviceInfo (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:DeviceInfo: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("NonceStr", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:NonceStr: ", p), err) }
  if err := oprot.WriteString(string(p.NonceStr)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.NonceStr (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:NonceStr: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Sign", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:Sign: ", p), err) }
  if err := oprot.WriteString(string(p.Sign)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Sign (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:Sign: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("SignType", thrift.STRING, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:SignType: ", p), err) }
  if err := oprot.WriteString(string(p.SignType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.SignType (6) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:SignType: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Body", thrift.STRING, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:Body: ", p), err) }
  if err := oprot.WriteString(string(p.Body)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Body (7) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:Body: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField8(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Detail", thrift.STRING, 8); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:Detail: ", p), err) }
  if err := oprot.WriteString(string(p.Detail)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Detail (8) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 8:Detail: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField9(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Attach", thrift.STRING, 9); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:Attach: ", p), err) }
  if err := oprot.WriteString(string(p.Attach)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Attach (9) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 9:Attach: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField10(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("OutTradeNo", thrift.STRING, 10); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:OutTradeNo: ", p), err) }
  if err := oprot.WriteString(string(p.OutTradeNo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.OutTradeNo (10) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 10:OutTradeNo: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField11(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("FeeType", thrift.STRING, 11); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:FeeType: ", p), err) }
  if err := oprot.WriteString(string(p.FeeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.FeeType (11) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 11:FeeType: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField12(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("TotalFee", thrift.STRING, 12); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:TotalFee: ", p), err) }
  if err := oprot.WriteString(string(p.TotalFee)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.TotalFee (12) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 12:TotalFee: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField13(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("SpbillCreateIp", thrift.STRING, 13); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:SpbillCreateIp: ", p), err) }
  if err := oprot.WriteString(string(p.SpbillCreateIp)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.SpbillCreateIp (13) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 13:SpbillCreateIp: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField14(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("TimeStart", thrift.STRING, 14); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:TimeStart: ", p), err) }
  if err := oprot.WriteString(string(p.TimeStart)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.TimeStart (14) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 14:TimeStart: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField15(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("TimeExpire", thrift.STRING, 15); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:TimeExpire: ", p), err) }
  if err := oprot.WriteString(string(p.TimeExpire)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.TimeExpire (15) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 15:TimeExpire: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField16(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("GoodsTag", thrift.STRING, 16); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:GoodsTag: ", p), err) }
  if err := oprot.WriteString(string(p.GoodsTag)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.GoodsTag (16) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 16:GoodsTag: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField17(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("NotifyUrl", thrift.STRING, 17); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:NotifyUrl: ", p), err) }
  if err := oprot.WriteString(string(p.NotifyUrl)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.NotifyUrl (17) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 17:NotifyUrl: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField18(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("TradeType", thrift.STRING, 18); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:TradeType: ", p), err) }
  if err := oprot.WriteString(string(p.TradeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.TradeType (18) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 18:TradeType: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField19(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ProductId", thrift.STRING, 19); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:ProductId: ", p), err) }
  if err := oprot.WriteString(string(p.ProductId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ProductId (19) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 19:ProductId: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField20(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("LimitPay", thrift.STRING, 20); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:LimitPay: ", p), err) }
  if err := oprot.WriteString(string(p.LimitPay)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.LimitPay (20) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 20:LimitPay: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField21(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Openid", thrift.STRING, 21); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:Openid: ", p), err) }
  if err := oprot.WriteString(string(p.Openid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Openid (21) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 21:Openid: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField22(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Receipt", thrift.STRING, 22); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:Receipt: ", p), err) }
  if err := oprot.WriteString(string(p.Receipt)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Receipt (22) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 22:Receipt: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) writeField23(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Scene_info", thrift.STRING, 23); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:Scene_info: ", p), err) }
  if err := oprot.WriteString(string(p.SceneInfo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Scene_info (23) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 23:Scene_info: ", p), err) }
  return err
}

func (p *UnifiedOrderParam) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("UnifiedOrderParam(%+v)", *p)
}

// Attributes:
//  - ReturnCode
//  - ReturnMsg
//  - Appid
//  - MchId
//  - DeviceInfo
//  - NonceStr
//  - Sign
//  - ResultCode
//  - ErrCode
//  - ErrCodeDes
//  - TradeType
//  - PrepayId
//  - CodeUrl
type UnifiedOrderResponse struct {
  ReturnCode string `thrift:"ReturnCode,1" db:"ReturnCode" json:"ReturnCode"`
  ReturnMsg string `thrift:"ReturnMsg,2" db:"ReturnMsg" json:"ReturnMsg"`
  Appid string `thrift:"Appid,3" db:"Appid" json:"Appid"`
  MchId string `thrift:"MchId,4" db:"MchId" json:"MchId"`
  DeviceInfo string `thrift:"DeviceInfo,5" db:"DeviceInfo" json:"DeviceInfo"`
  NonceStr string `thrift:"NonceStr,6" db:"NonceStr" json:"NonceStr"`
  Sign string `thrift:"Sign,7" db:"Sign" json:"Sign"`
  ResultCode string `thrift:"ResultCode,8" db:"ResultCode" json:"ResultCode"`
  ErrCode string `thrift:"ErrCode,9" db:"ErrCode" json:"ErrCode"`
  ErrCodeDes string `thrift:"ErrCodeDes,10" db:"ErrCodeDes" json:"ErrCodeDes"`
  TradeType string `thrift:"TradeType,11" db:"TradeType" json:"TradeType"`
  PrepayId string `thrift:"PrepayId,12" db:"PrepayId" json:"PrepayId"`
  CodeUrl string `thrift:"CodeUrl,13" db:"CodeUrl" json:"CodeUrl"`
}

func NewUnifiedOrderResponse() *UnifiedOrderResponse {
  return &UnifiedOrderResponse{}
}


func (p *UnifiedOrderResponse) GetReturnCode() string {
  return p.ReturnCode
}

func (p *UnifiedOrderResponse) GetReturnMsg() string {
  return p.ReturnMsg
}

func (p *UnifiedOrderResponse) GetAppid() string {
  return p.Appid
}

func (p *UnifiedOrderResponse) GetMchId() string {
  return p.MchId
}

func (p *UnifiedOrderResponse) GetDeviceInfo() string {
  return p.DeviceInfo
}

func (p *UnifiedOrderResponse) GetNonceStr() string {
  return p.NonceStr
}

func (p *UnifiedOrderResponse) GetSign() string {
  return p.Sign
}

func (p *UnifiedOrderResponse) GetResultCode() string {
  return p.ResultCode
}

func (p *UnifiedOrderResponse) GetErrCode() string {
  return p.ErrCode
}

func (p *UnifiedOrderResponse) GetErrCodeDes() string {
  return p.ErrCodeDes
}

func (p *UnifiedOrderResponse) GetTradeType() string {
  return p.TradeType
}

func (p *UnifiedOrderResponse) GetPrepayId() string {
  return p.PrepayId
}

func (p *UnifiedOrderResponse) GetCodeUrl() string {
  return p.CodeUrl
}
func (p *UnifiedOrderResponse) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    case 7:
      if err := p.ReadField7(iprot); err != nil {
        return err
      }
    case 8:
      if err := p.ReadField8(iprot); err != nil {
        return err
      }
    case 9:
      if err := p.ReadField9(iprot); err != nil {
        return err
      }
    case 10:
      if err := p.ReadField10(iprot); err != nil {
        return err
      }
    case 11:
      if err := p.ReadField11(iprot); err != nil {
        return err
      }
    case 12:
      if err := p.ReadField12(iprot); err != nil {
        return err
      }
    case 13:
      if err := p.ReadField13(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *UnifiedOrderResponse)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ReturnCode = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.ReturnMsg = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.Appid = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.MchId = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.DeviceInfo = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField6(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 6: ", err)
} else {
  p.NonceStr = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField7(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 7: ", err)
} else {
  p.Sign = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField8(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 8: ", err)
} else {
  p.ResultCode = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField9(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 9: ", err)
} else {
  p.ErrCode = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField10(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 10: ", err)
} else {
  p.ErrCodeDes = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField11(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 11: ", err)
} else {
  p.TradeType = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField12(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 12: ", err)
} else {
  p.PrepayId = v
}
  return nil
}

func (p *UnifiedOrderResponse)  ReadField13(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 13: ", err)
} else {
  p.CodeUrl = v
}
  return nil
}

func (p *UnifiedOrderResponse) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("UnifiedOrderResponse"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
    if err := p.writeField8(oprot); err != nil { return err }
    if err := p.writeField9(oprot); err != nil { return err }
    if err := p.writeField10(oprot); err != nil { return err }
    if err := p.writeField11(oprot); err != nil { return err }
    if err := p.writeField12(oprot); err != nil { return err }
    if err := p.writeField13(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *UnifiedOrderResponse) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ReturnCode", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:ReturnCode: ", p), err) }
  if err := oprot.WriteString(string(p.ReturnCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ReturnCode (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:ReturnCode: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ReturnMsg", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:ReturnMsg: ", p), err) }
  if err := oprot.WriteString(string(p.ReturnMsg)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ReturnMsg (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:ReturnMsg: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Appid", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:Appid: ", p), err) }
  if err := oprot.WriteString(string(p.Appid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Appid (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:Appid: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("MchId", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:MchId: ", p), err) }
  if err := oprot.WriteString(string(p.MchId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.MchId (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:MchId: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("DeviceInfo", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:DeviceInfo: ", p), err) }
  if err := oprot.WriteString(string(p.DeviceInfo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.DeviceInfo (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:DeviceInfo: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("NonceStr", thrift.STRING, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:NonceStr: ", p), err) }
  if err := oprot.WriteString(string(p.NonceStr)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.NonceStr (6) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:NonceStr: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("Sign", thrift.STRING, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:Sign: ", p), err) }
  if err := oprot.WriteString(string(p.Sign)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.Sign (7) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:Sign: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField8(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ResultCode", thrift.STRING, 8); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:ResultCode: ", p), err) }
  if err := oprot.WriteString(string(p.ResultCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ResultCode (8) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 8:ResultCode: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField9(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ErrCode", thrift.STRING, 9); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:ErrCode: ", p), err) }
  if err := oprot.WriteString(string(p.ErrCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ErrCode (9) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 9:ErrCode: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField10(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("ErrCodeDes", thrift.STRING, 10); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:ErrCodeDes: ", p), err) }
  if err := oprot.WriteString(string(p.ErrCodeDes)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.ErrCodeDes (10) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 10:ErrCodeDes: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField11(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("TradeType", thrift.STRING, 11); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:TradeType: ", p), err) }
  if err := oprot.WriteString(string(p.TradeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.TradeType (11) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 11:TradeType: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField12(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("PrepayId", thrift.STRING, 12); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:PrepayId: ", p), err) }
  if err := oprot.WriteString(string(p.PrepayId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.PrepayId (12) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 12:PrepayId: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) writeField13(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("CodeUrl", thrift.STRING, 13); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:CodeUrl: ", p), err) }
  if err := oprot.WriteString(string(p.CodeUrl)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.CodeUrl (13) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 13:CodeUrl: ", p), err) }
  return err
}

func (p *UnifiedOrderResponse) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("UnifiedOrderResponse(%+v)", *p)
}

// Attributes:
//  - PrepayId
//  - NonceStr
//  - TimeStamp
//  - Sign
//  - AppId
//  - PaySign
type JsApiParameters struct {
  PrepayId string `thrift:"prepayId,1" db:"prepayId" json:"prepayId"`
  NonceStr string `thrift:"nonceStr,2" db:"nonceStr" json:"nonceStr"`
  TimeStamp int64 `thrift:"timeStamp,3" db:"timeStamp" json:"timeStamp"`
  Sign string `thrift:"sign,4" db:"sign" json:"sign"`
  AppId string `thrift:"appId,5" db:"appId" json:"appId"`
  PaySign string `thrift:"paySign,6" db:"paySign" json:"paySign"`
}

func NewJsApiParameters() *JsApiParameters {
  return &JsApiParameters{}
}


func (p *JsApiParameters) GetPrepayId() string {
  return p.PrepayId
}

func (p *JsApiParameters) GetNonceStr() string {
  return p.NonceStr
}

func (p *JsApiParameters) GetTimeStamp() int64 {
  return p.TimeStamp
}

func (p *JsApiParameters) GetSign() string {
  return p.Sign
}

func (p *JsApiParameters) GetAppId() string {
  return p.AppId
}

func (p *JsApiParameters) GetPaySign() string {
  return p.PaySign
}
func (p *JsApiParameters) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *JsApiParameters)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.PrepayId = v
}
  return nil
}

func (p *JsApiParameters)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.NonceStr = v
}
  return nil
}

func (p *JsApiParameters)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.TimeStamp = v
}
  return nil
}

func (p *JsApiParameters)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.Sign = v
}
  return nil
}

func (p *JsApiParameters)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.AppId = v
}
  return nil
}

func (p *JsApiParameters)  ReadField6(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 6: ", err)
} else {
  p.PaySign = v
}
  return nil
}

func (p *JsApiParameters) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("JsApiParameters"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *JsApiParameters) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("prepayId", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:prepayId: ", p), err) }
  if err := oprot.WriteString(string(p.PrepayId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.prepayId (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:prepayId: ", p), err) }
  return err
}

func (p *JsApiParameters) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("nonceStr", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:nonceStr: ", p), err) }
  if err := oprot.WriteString(string(p.NonceStr)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.nonceStr (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:nonceStr: ", p), err) }
  return err
}

func (p *JsApiParameters) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("timeStamp", thrift.I64, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:timeStamp: ", p), err) }
  if err := oprot.WriteI64(int64(p.TimeStamp)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.timeStamp (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:timeStamp: ", p), err) }
  return err
}

func (p *JsApiParameters) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("sign", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:sign: ", p), err) }
  if err := oprot.WriteString(string(p.Sign)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.sign (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:sign: ", p), err) }
  return err
}

func (p *JsApiParameters) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("appId", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:appId: ", p), err) }
  if err := oprot.WriteString(string(p.AppId)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.appId (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:appId: ", p), err) }
  return err
}

func (p *JsApiParameters) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("paySign", thrift.STRING, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:paySign: ", p), err) }
  if err := oprot.WriteString(string(p.PaySign)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.paySign (6) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:paySign: ", p), err) }
  return err
}

func (p *JsApiParameters) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("JsApiParameters(%+v)", *p)
}

// Attributes:
//  - ReturnCode
//  - ReturnMsg
//  - Appid
//  - MchID
//  - DeviceInfo
//  - NonceStr
//  - Sign
//  - ResultCode
//  - ErrCode
//  - ErrCodeDes
//  - Openid
//  - IsSubscribe
//  - TradeType
//  - BankType
//  - TotalFee
//  - FeeType
//  - CashFee
//  - CashFeeType
//  - CouponFee
//  - CouponCount
//  - CouponID_0
//  - CouponFee_0
//  - TransactionID
//  - OutTradeNo
//  - Attach
//  - TimeEnd
type WXPayNotify struct {
  ReturnCode string `thrift:"return_code,1" db:"return_code" json:"return_code"`
  ReturnMsg string `thrift:"return_msg,2" db:"return_msg" json:"return_msg"`
  Appid string `thrift:"appid,3" db:"appid" json:"appid"`
  MchID string `thrift:"mch_id,4" db:"mch_id" json:"mch_id"`
  DeviceInfo string `thrift:"device_info,5" db:"device_info" json:"device_info"`
  NonceStr string `thrift:"nonce_str,6" db:"nonce_str" json:"nonce_str"`
  Sign string `thrift:"sign,7" db:"sign" json:"sign"`
  ResultCode string `thrift:"result_code,8" db:"result_code" json:"result_code"`
  ErrCode string `thrift:"err_code,9" db:"err_code" json:"err_code"`
  ErrCodeDes string `thrift:"err_code_des,10" db:"err_code_des" json:"err_code_des"`
  Openid string `thrift:"openid,11" db:"openid" json:"openid"`
  IsSubscribe string `thrift:"is_subscribe,12" db:"is_subscribe" json:"is_subscribe"`
  TradeType string `thrift:"trade_type,13" db:"trade_type" json:"trade_type"`
  BankType string `thrift:"bank_type,14" db:"bank_type" json:"bank_type"`
  TotalFee int64 `thrift:"total_fee,15" db:"total_fee" json:"total_fee"`
  FeeType string `thrift:"fee_type,16" db:"fee_type" json:"fee_type"`
  CashFee int64 `thrift:"cash_fee,17" db:"cash_fee" json:"cash_fee"`
  CashFeeType string `thrift:"cash_fee_type,18" db:"cash_fee_type" json:"cash_fee_type"`
  CouponFee int64 `thrift:"coupon_fee,19" db:"coupon_fee" json:"coupon_fee"`
  CouponCount int64 `thrift:"coupon_count,20" db:"coupon_count" json:"coupon_count"`
  CouponID_0 string `thrift:"coupon_id_0,21" db:"coupon_id_0" json:"coupon_id_0"`
  CouponFee_0 int64 `thrift:"coupon_fee_0,22" db:"coupon_fee_0" json:"coupon_fee_0"`
  TransactionID string `thrift:"transaction_id,23" db:"transaction_id" json:"transaction_id"`
  OutTradeNo string `thrift:"out_trade_no,24" db:"out_trade_no" json:"out_trade_no"`
  Attach string `thrift:"attach,25" db:"attach" json:"attach"`
  TimeEnd string `thrift:"time_end,26" db:"time_end" json:"time_end"`
}

func NewWXPayNotify() *WXPayNotify {
  return &WXPayNotify{}
}


func (p *WXPayNotify) GetReturnCode() string {
  return p.ReturnCode
}

func (p *WXPayNotify) GetReturnMsg() string {
  return p.ReturnMsg
}

func (p *WXPayNotify) GetAppid() string {
  return p.Appid
}

func (p *WXPayNotify) GetMchID() string {
  return p.MchID
}

func (p *WXPayNotify) GetDeviceInfo() string {
  return p.DeviceInfo
}

func (p *WXPayNotify) GetNonceStr() string {
  return p.NonceStr
}

func (p *WXPayNotify) GetSign() string {
  return p.Sign
}

func (p *WXPayNotify) GetResultCode() string {
  return p.ResultCode
}

func (p *WXPayNotify) GetErrCode() string {
  return p.ErrCode
}

func (p *WXPayNotify) GetErrCodeDes() string {
  return p.ErrCodeDes
}

func (p *WXPayNotify) GetOpenid() string {
  return p.Openid
}

func (p *WXPayNotify) GetIsSubscribe() string {
  return p.IsSubscribe
}

func (p *WXPayNotify) GetTradeType() string {
  return p.TradeType
}

func (p *WXPayNotify) GetBankType() string {
  return p.BankType
}

func (p *WXPayNotify) GetTotalFee() int64 {
  return p.TotalFee
}

func (p *WXPayNotify) GetFeeType() string {
  return p.FeeType
}

func (p *WXPayNotify) GetCashFee() int64 {
  return p.CashFee
}

func (p *WXPayNotify) GetCashFeeType() string {
  return p.CashFeeType
}

func (p *WXPayNotify) GetCouponFee() int64 {
  return p.CouponFee
}

func (p *WXPayNotify) GetCouponCount() int64 {
  return p.CouponCount
}

func (p *WXPayNotify) GetCouponID_0() string {
  return p.CouponID_0
}

func (p *WXPayNotify) GetCouponFee_0() int64 {
  return p.CouponFee_0
}

func (p *WXPayNotify) GetTransactionID() string {
  return p.TransactionID
}

func (p *WXPayNotify) GetOutTradeNo() string {
  return p.OutTradeNo
}

func (p *WXPayNotify) GetAttach() string {
  return p.Attach
}

func (p *WXPayNotify) GetTimeEnd() string {
  return p.TimeEnd
}
func (p *WXPayNotify) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }


  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
    case 3:
      if err := p.ReadField3(iprot); err != nil {
        return err
      }
    case 4:
      if err := p.ReadField4(iprot); err != nil {
        return err
      }
    case 5:
      if err := p.ReadField5(iprot); err != nil {
        return err
      }
    case 6:
      if err := p.ReadField6(iprot); err != nil {
        return err
      }
    case 7:
      if err := p.ReadField7(iprot); err != nil {
        return err
      }
    case 8:
      if err := p.ReadField8(iprot); err != nil {
        return err
      }
    case 9:
      if err := p.ReadField9(iprot); err != nil {
        return err
      }
    case 10:
      if err := p.ReadField10(iprot); err != nil {
        return err
      }
    case 11:
      if err := p.ReadField11(iprot); err != nil {
        return err
      }
    case 12:
      if err := p.ReadField12(iprot); err != nil {
        return err
      }
    case 13:
      if err := p.ReadField13(iprot); err != nil {
        return err
      }
    case 14:
      if err := p.ReadField14(iprot); err != nil {
        return err
      }
    case 15:
      if err := p.ReadField15(iprot); err != nil {
        return err
      }
    case 16:
      if err := p.ReadField16(iprot); err != nil {
        return err
      }
    case 17:
      if err := p.ReadField17(iprot); err != nil {
        return err
      }
    case 18:
      if err := p.ReadField18(iprot); err != nil {
        return err
      }
    case 19:
      if err := p.ReadField19(iprot); err != nil {
        return err
      }
    case 20:
      if err := p.ReadField20(iprot); err != nil {
        return err
      }
    case 21:
      if err := p.ReadField21(iprot); err != nil {
        return err
      }
    case 22:
      if err := p.ReadField22(iprot); err != nil {
        return err
      }
    case 23:
      if err := p.ReadField23(iprot); err != nil {
        return err
      }
    case 24:
      if err := p.ReadField24(iprot); err != nil {
        return err
      }
    case 25:
      if err := p.ReadField25(iprot); err != nil {
        return err
      }
    case 26:
      if err := p.ReadField26(iprot); err != nil {
        return err
      }
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  return nil
}

func (p *WXPayNotify)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.ReturnCode = v
}
  return nil
}

func (p *WXPayNotify)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.ReturnMsg = v
}
  return nil
}

func (p *WXPayNotify)  ReadField3(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 3: ", err)
} else {
  p.Appid = v
}
  return nil
}

func (p *WXPayNotify)  ReadField4(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 4: ", err)
} else {
  p.MchID = v
}
  return nil
}

func (p *WXPayNotify)  ReadField5(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 5: ", err)
} else {
  p.DeviceInfo = v
}
  return nil
}

func (p *WXPayNotify)  ReadField6(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 6: ", err)
} else {
  p.NonceStr = v
}
  return nil
}

func (p *WXPayNotify)  ReadField7(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 7: ", err)
} else {
  p.Sign = v
}
  return nil
}

func (p *WXPayNotify)  ReadField8(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 8: ", err)
} else {
  p.ResultCode = v
}
  return nil
}

func (p *WXPayNotify)  ReadField9(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 9: ", err)
} else {
  p.ErrCode = v
}
  return nil
}

func (p *WXPayNotify)  ReadField10(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 10: ", err)
} else {
  p.ErrCodeDes = v
}
  return nil
}

func (p *WXPayNotify)  ReadField11(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 11: ", err)
} else {
  p.Openid = v
}
  return nil
}

func (p *WXPayNotify)  ReadField12(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 12: ", err)
} else {
  p.IsSubscribe = v
}
  return nil
}

func (p *WXPayNotify)  ReadField13(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 13: ", err)
} else {
  p.TradeType = v
}
  return nil
}

func (p *WXPayNotify)  ReadField14(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 14: ", err)
} else {
  p.BankType = v
}
  return nil
}

func (p *WXPayNotify)  ReadField15(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 15: ", err)
} else {
  p.TotalFee = v
}
  return nil
}

func (p *WXPayNotify)  ReadField16(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 16: ", err)
} else {
  p.FeeType = v
}
  return nil
}

func (p *WXPayNotify)  ReadField17(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 17: ", err)
} else {
  p.CashFee = v
}
  return nil
}

func (p *WXPayNotify)  ReadField18(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 18: ", err)
} else {
  p.CashFeeType = v
}
  return nil
}

func (p *WXPayNotify)  ReadField19(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 19: ", err)
} else {
  p.CouponFee = v
}
  return nil
}

func (p *WXPayNotify)  ReadField20(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 20: ", err)
} else {
  p.CouponCount = v
}
  return nil
}

func (p *WXPayNotify)  ReadField21(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 21: ", err)
} else {
  p.CouponID_0 = v
}
  return nil
}

func (p *WXPayNotify)  ReadField22(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadI64(); err != nil {
  return thrift.PrependError("error reading field 22: ", err)
} else {
  p.CouponFee_0 = v
}
  return nil
}

func (p *WXPayNotify)  ReadField23(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 23: ", err)
} else {
  p.TransactionID = v
}
  return nil
}

func (p *WXPayNotify)  ReadField24(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 24: ", err)
} else {
  p.OutTradeNo = v
}
  return nil
}

func (p *WXPayNotify)  ReadField25(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 25: ", err)
} else {
  p.Attach = v
}
  return nil
}

func (p *WXPayNotify)  ReadField26(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadString(); err != nil {
  return thrift.PrependError("error reading field 26: ", err)
} else {
  p.TimeEnd = v
}
  return nil
}

func (p *WXPayNotify) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("WXPayNotify"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
    if err := p.writeField3(oprot); err != nil { return err }
    if err := p.writeField4(oprot); err != nil { return err }
    if err := p.writeField5(oprot); err != nil { return err }
    if err := p.writeField6(oprot); err != nil { return err }
    if err := p.writeField7(oprot); err != nil { return err }
    if err := p.writeField8(oprot); err != nil { return err }
    if err := p.writeField9(oprot); err != nil { return err }
    if err := p.writeField10(oprot); err != nil { return err }
    if err := p.writeField11(oprot); err != nil { return err }
    if err := p.writeField12(oprot); err != nil { return err }
    if err := p.writeField13(oprot); err != nil { return err }
    if err := p.writeField14(oprot); err != nil { return err }
    if err := p.writeField15(oprot); err != nil { return err }
    if err := p.writeField16(oprot); err != nil { return err }
    if err := p.writeField17(oprot); err != nil { return err }
    if err := p.writeField18(oprot); err != nil { return err }
    if err := p.writeField19(oprot); err != nil { return err }
    if err := p.writeField20(oprot); err != nil { return err }
    if err := p.writeField21(oprot); err != nil { return err }
    if err := p.writeField22(oprot); err != nil { return err }
    if err := p.writeField23(oprot); err != nil { return err }
    if err := p.writeField24(oprot); err != nil { return err }
    if err := p.writeField25(oprot); err != nil { return err }
    if err := p.writeField26(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *WXPayNotify) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("return_code", thrift.STRING, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:return_code: ", p), err) }
  if err := oprot.WriteString(string(p.ReturnCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.return_code (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:return_code: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("return_msg", thrift.STRING, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:return_msg: ", p), err) }
  if err := oprot.WriteString(string(p.ReturnMsg)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.return_msg (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:return_msg: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField3(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("appid", thrift.STRING, 3); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:appid: ", p), err) }
  if err := oprot.WriteString(string(p.Appid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.appid (3) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 3:appid: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField4(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("mch_id", thrift.STRING, 4); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:mch_id: ", p), err) }
  if err := oprot.WriteString(string(p.MchID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.mch_id (4) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 4:mch_id: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField5(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("device_info", thrift.STRING, 5); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:device_info: ", p), err) }
  if err := oprot.WriteString(string(p.DeviceInfo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.device_info (5) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 5:device_info: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField6(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("nonce_str", thrift.STRING, 6); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:nonce_str: ", p), err) }
  if err := oprot.WriteString(string(p.NonceStr)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.nonce_str (6) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 6:nonce_str: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField7(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("sign", thrift.STRING, 7); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:sign: ", p), err) }
  if err := oprot.WriteString(string(p.Sign)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.sign (7) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 7:sign: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField8(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("result_code", thrift.STRING, 8); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:result_code: ", p), err) }
  if err := oprot.WriteString(string(p.ResultCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.result_code (8) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 8:result_code: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField9(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("err_code", thrift.STRING, 9); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:err_code: ", p), err) }
  if err := oprot.WriteString(string(p.ErrCode)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.err_code (9) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 9:err_code: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField10(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("err_code_des", thrift.STRING, 10); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:err_code_des: ", p), err) }
  if err := oprot.WriteString(string(p.ErrCodeDes)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.err_code_des (10) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 10:err_code_des: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField11(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("openid", thrift.STRING, 11); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:openid: ", p), err) }
  if err := oprot.WriteString(string(p.Openid)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.openid (11) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 11:openid: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField12(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("is_subscribe", thrift.STRING, 12); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:is_subscribe: ", p), err) }
  if err := oprot.WriteString(string(p.IsSubscribe)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.is_subscribe (12) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 12:is_subscribe: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField13(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("trade_type", thrift.STRING, 13); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:trade_type: ", p), err) }
  if err := oprot.WriteString(string(p.TradeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.trade_type (13) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 13:trade_type: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField14(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("bank_type", thrift.STRING, 14); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:bank_type: ", p), err) }
  if err := oprot.WriteString(string(p.BankType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.bank_type (14) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 14:bank_type: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField15(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("total_fee", thrift.I64, 15); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:total_fee: ", p), err) }
  if err := oprot.WriteI64(int64(p.TotalFee)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.total_fee (15) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 15:total_fee: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField16(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("fee_type", thrift.STRING, 16); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:fee_type: ", p), err) }
  if err := oprot.WriteString(string(p.FeeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.fee_type (16) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 16:fee_type: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField17(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("cash_fee", thrift.I64, 17); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:cash_fee: ", p), err) }
  if err := oprot.WriteI64(int64(p.CashFee)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.cash_fee (17) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 17:cash_fee: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField18(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("cash_fee_type", thrift.STRING, 18); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:cash_fee_type: ", p), err) }
  if err := oprot.WriteString(string(p.CashFeeType)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.cash_fee_type (18) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 18:cash_fee_type: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField19(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("coupon_fee", thrift.I64, 19); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:coupon_fee: ", p), err) }
  if err := oprot.WriteI64(int64(p.CouponFee)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.coupon_fee (19) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 19:coupon_fee: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField20(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("coupon_count", thrift.I64, 20); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:coupon_count: ", p), err) }
  if err := oprot.WriteI64(int64(p.CouponCount)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.coupon_count (20) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 20:coupon_count: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField21(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("coupon_id_0", thrift.STRING, 21); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 21:coupon_id_0: ", p), err) }
  if err := oprot.WriteString(string(p.CouponID_0)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.coupon_id_0 (21) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 21:coupon_id_0: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField22(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("coupon_fee_0", thrift.I64, 22); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 22:coupon_fee_0: ", p), err) }
  if err := oprot.WriteI64(int64(p.CouponFee_0)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.coupon_fee_0 (22) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 22:coupon_fee_0: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField23(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("transaction_id", thrift.STRING, 23); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 23:transaction_id: ", p), err) }
  if err := oprot.WriteString(string(p.TransactionID)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.transaction_id (23) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 23:transaction_id: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField24(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("out_trade_no", thrift.STRING, 24); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 24:out_trade_no: ", p), err) }
  if err := oprot.WriteString(string(p.OutTradeNo)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.out_trade_no (24) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 24:out_trade_no: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField25(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("attach", thrift.STRING, 25); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 25:attach: ", p), err) }
  if err := oprot.WriteString(string(p.Attach)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.attach (25) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 25:attach: ", p), err) }
  return err
}

func (p *WXPayNotify) writeField26(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("time_end", thrift.STRING, 26); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 26:time_end: ", p), err) }
  if err := oprot.WriteString(string(p.TimeEnd)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.time_end (26) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 26:time_end: ", p), err) }
  return err
}

func (p *WXPayNotify) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("WXPayNotify(%+v)", *p)
}

