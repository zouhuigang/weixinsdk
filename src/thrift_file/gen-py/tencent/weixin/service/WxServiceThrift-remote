#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from tencent.weixin.service import WxServiceThrift
from tencent.weixin.service.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('   CallBack(i64 callTime, string name,  paramMap)')
    print('  void put(Article newArticle)')
    print('  string GetAccessToken()')
    print('  string GetJsapiTicket()')
    print('  JsapiSignData JsapiSign(string url)')
    print('  IsWeixinServerData IsWeixinServer(string token, string echostr, string signature, string timestamp, string nonce)')
    print('  ParseTemplateToMixedMessagesData ParseTemplateToMixedMessages(string body)')
    print('  SendTemplateResponseData SendTmplateMessage(TemplateMsgData tpl)')
    print('  string GetTextXml(string fromUserName, string toUserName, string content)')
    print('  string TransferCustomerService(string fromUserName, string toUserName, string kfAccount)')
    print('  AuthCodeURLData AuthCodeURL(string redirectURL, string scope)')
    print('  UserInfo GetUserInfoBySnsapiBase(string code)')
    print('  UserInfo GetUserInfoBySnsapiUserinfo(string code)')
    print('  UserInfo GetUserInfoByOpenid(string openid)')
    print('  WxResponse CreateMenu(menu menu)')
    print('  WxResponse CreateMenuByJson(string menuJsonBytes)')
    print('  UnifiedOrderResponse UnifiedOrder(UnifiedOrderParam orderParam)')
    print('  JsApiParameters GetJsApiParameters(UnifiedOrderResponse unifiedOrderResult)')
    print('  WXPayNotify WxpayParseAndVerifySign(string xmlBytes)')
    print('  string QrcodeShow(string qrJsonBytes)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = WxServiceThrift.Client(protocol)
transport.open()

if cmd == 'CallBack':
    if len(args) != 3:
        print('CallBack requires 3 args')
        sys.exit(1)
    pp.pprint(client.CallBack(eval(args[0]), args[1], eval(args[2]),))

elif cmd == 'put':
    if len(args) != 1:
        print('put requires 1 args')
        sys.exit(1)
    pp.pprint(client.put(eval(args[0]),))

elif cmd == 'GetAccessToken':
    if len(args) != 0:
        print('GetAccessToken requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetAccessToken())

elif cmd == 'GetJsapiTicket':
    if len(args) != 0:
        print('GetJsapiTicket requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetJsapiTicket())

elif cmd == 'JsapiSign':
    if len(args) != 1:
        print('JsapiSign requires 1 args')
        sys.exit(1)
    pp.pprint(client.JsapiSign(args[0],))

elif cmd == 'IsWeixinServer':
    if len(args) != 5:
        print('IsWeixinServer requires 5 args')
        sys.exit(1)
    pp.pprint(client.IsWeixinServer(args[0], args[1], args[2], args[3], args[4],))

elif cmd == 'ParseTemplateToMixedMessages':
    if len(args) != 1:
        print('ParseTemplateToMixedMessages requires 1 args')
        sys.exit(1)
    pp.pprint(client.ParseTemplateToMixedMessages(args[0],))

elif cmd == 'SendTmplateMessage':
    if len(args) != 1:
        print('SendTmplateMessage requires 1 args')
        sys.exit(1)
    pp.pprint(client.SendTmplateMessage(eval(args[0]),))

elif cmd == 'GetTextXml':
    if len(args) != 3:
        print('GetTextXml requires 3 args')
        sys.exit(1)
    pp.pprint(client.GetTextXml(args[0], args[1], args[2],))

elif cmd == 'TransferCustomerService':
    if len(args) != 3:
        print('TransferCustomerService requires 3 args')
        sys.exit(1)
    pp.pprint(client.TransferCustomerService(args[0], args[1], args[2],))

elif cmd == 'AuthCodeURL':
    if len(args) != 2:
        print('AuthCodeURL requires 2 args')
        sys.exit(1)
    pp.pprint(client.AuthCodeURL(args[0], args[1],))

elif cmd == 'GetUserInfoBySnsapiBase':
    if len(args) != 1:
        print('GetUserInfoBySnsapiBase requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetUserInfoBySnsapiBase(args[0],))

elif cmd == 'GetUserInfoBySnsapiUserinfo':
    if len(args) != 1:
        print('GetUserInfoBySnsapiUserinfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetUserInfoBySnsapiUserinfo(args[0],))

elif cmd == 'GetUserInfoByOpenid':
    if len(args) != 1:
        print('GetUserInfoByOpenid requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetUserInfoByOpenid(args[0],))

elif cmd == 'CreateMenu':
    if len(args) != 1:
        print('CreateMenu requires 1 args')
        sys.exit(1)
    pp.pprint(client.CreateMenu(eval(args[0]),))

elif cmd == 'CreateMenuByJson':
    if len(args) != 1:
        print('CreateMenuByJson requires 1 args')
        sys.exit(1)
    pp.pprint(client.CreateMenuByJson(args[0],))

elif cmd == 'UnifiedOrder':
    if len(args) != 1:
        print('UnifiedOrder requires 1 args')
        sys.exit(1)
    pp.pprint(client.UnifiedOrder(eval(args[0]),))

elif cmd == 'GetJsApiParameters':
    if len(args) != 1:
        print('GetJsApiParameters requires 1 args')
        sys.exit(1)
    pp.pprint(client.GetJsApiParameters(eval(args[0]),))

elif cmd == 'WxpayParseAndVerifySign':
    if len(args) != 1:
        print('WxpayParseAndVerifySign requires 1 args')
        sys.exit(1)
    pp.pprint(client.WxpayParseAndVerifySign(args[0],))

elif cmd == 'QrcodeShow':
    if len(args) != 1:
        print('QrcodeShow requires 1 args')
        sys.exit(1)
    pp.pprint(client.QrcodeShow(args[0],))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
