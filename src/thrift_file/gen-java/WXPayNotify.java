/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2019-10-12")
public class WXPayNotify implements org.apache.thrift.TBase<WXPayNotify, WXPayNotify._Fields>, java.io.Serializable, Cloneable, Comparable<WXPayNotify> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("WXPayNotify");

  private static final org.apache.thrift.protocol.TField RETURN_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("return_code", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField RETURN_MSG_FIELD_DESC = new org.apache.thrift.protocol.TField("return_msg", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField APPID_FIELD_DESC = new org.apache.thrift.protocol.TField("appid", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MCH_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mch_id", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DEVICE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("device_info", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NONCE_STR_FIELD_DESC = new org.apache.thrift.protocol.TField("nonce_str", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SIGN_FIELD_DESC = new org.apache.thrift.protocol.TField("sign", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField RESULT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("result_code", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField ERR_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("err_code", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ERR_CODE_DES_FIELD_DESC = new org.apache.thrift.protocol.TField("err_code_des", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField OPENID_FIELD_DESC = new org.apache.thrift.protocol.TField("openid", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField IS_SUBSCRIBE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_subscribe", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField TRADE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("trade_type", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField BANK_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("bank_type", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField TOTAL_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("total_fee", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField FEE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("fee_type", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField CASH_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("cash_fee", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField CASH_FEE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("cash_fee_type", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField COUPON_FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("coupon_fee", org.apache.thrift.protocol.TType.I64, (short)19);
  private static final org.apache.thrift.protocol.TField COUPON_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("coupon_count", org.apache.thrift.protocol.TType.I64, (short)20);
  private static final org.apache.thrift.protocol.TField COUPON_ID_0_FIELD_DESC = new org.apache.thrift.protocol.TField("coupon_id_0", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField COUPON_FEE_0_FIELD_DESC = new org.apache.thrift.protocol.TField("coupon_fee_0", org.apache.thrift.protocol.TType.I64, (short)22);
  private static final org.apache.thrift.protocol.TField TRANSACTION_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("transaction_id", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField OUT_TRADE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("out_trade_no", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField ATTACH_FIELD_DESC = new org.apache.thrift.protocol.TField("attach", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField TIME_END_FIELD_DESC = new org.apache.thrift.protocol.TField("time_end", org.apache.thrift.protocol.TType.STRING, (short)26);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new WXPayNotifyStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new WXPayNotifyTupleSchemeFactory();

  public java.lang.String return_code; // required
  public java.lang.String return_msg; // required
  public java.lang.String appid; // required
  public java.lang.String mch_id; // required
  public java.lang.String device_info; // required
  public java.lang.String nonce_str; // required
  public java.lang.String sign; // required
  public java.lang.String result_code; // required
  public java.lang.String err_code; // required
  public java.lang.String err_code_des; // required
  public java.lang.String openid; // required
  public java.lang.String is_subscribe; // required
  public java.lang.String trade_type; // required
  public java.lang.String bank_type; // required
  public long total_fee; // required
  public java.lang.String fee_type; // required
  public long cash_fee; // required
  public java.lang.String cash_fee_type; // required
  public long coupon_fee; // required
  public long coupon_count; // required
  public java.lang.String coupon_id_0; // required
  public long coupon_fee_0; // required
  public java.lang.String transaction_id; // required
  public java.lang.String out_trade_no; // required
  public java.lang.String attach; // required
  public java.lang.String time_end; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RETURN_CODE((short)1, "return_code"),
    RETURN_MSG((short)2, "return_msg"),
    APPID((short)3, "appid"),
    MCH_ID((short)4, "mch_id"),
    DEVICE_INFO((short)5, "device_info"),
    NONCE_STR((short)6, "nonce_str"),
    SIGN((short)7, "sign"),
    RESULT_CODE((short)8, "result_code"),
    ERR_CODE((short)9, "err_code"),
    ERR_CODE_DES((short)10, "err_code_des"),
    OPENID((short)11, "openid"),
    IS_SUBSCRIBE((short)12, "is_subscribe"),
    TRADE_TYPE((short)13, "trade_type"),
    BANK_TYPE((short)14, "bank_type"),
    TOTAL_FEE((short)15, "total_fee"),
    FEE_TYPE((short)16, "fee_type"),
    CASH_FEE((short)17, "cash_fee"),
    CASH_FEE_TYPE((short)18, "cash_fee_type"),
    COUPON_FEE((short)19, "coupon_fee"),
    COUPON_COUNT((short)20, "coupon_count"),
    COUPON_ID_0((short)21, "coupon_id_0"),
    COUPON_FEE_0((short)22, "coupon_fee_0"),
    TRANSACTION_ID((short)23, "transaction_id"),
    OUT_TRADE_NO((short)24, "out_trade_no"),
    ATTACH((short)25, "attach"),
    TIME_END((short)26, "time_end");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RETURN_CODE
          return RETURN_CODE;
        case 2: // RETURN_MSG
          return RETURN_MSG;
        case 3: // APPID
          return APPID;
        case 4: // MCH_ID
          return MCH_ID;
        case 5: // DEVICE_INFO
          return DEVICE_INFO;
        case 6: // NONCE_STR
          return NONCE_STR;
        case 7: // SIGN
          return SIGN;
        case 8: // RESULT_CODE
          return RESULT_CODE;
        case 9: // ERR_CODE
          return ERR_CODE;
        case 10: // ERR_CODE_DES
          return ERR_CODE_DES;
        case 11: // OPENID
          return OPENID;
        case 12: // IS_SUBSCRIBE
          return IS_SUBSCRIBE;
        case 13: // TRADE_TYPE
          return TRADE_TYPE;
        case 14: // BANK_TYPE
          return BANK_TYPE;
        case 15: // TOTAL_FEE
          return TOTAL_FEE;
        case 16: // FEE_TYPE
          return FEE_TYPE;
        case 17: // CASH_FEE
          return CASH_FEE;
        case 18: // CASH_FEE_TYPE
          return CASH_FEE_TYPE;
        case 19: // COUPON_FEE
          return COUPON_FEE;
        case 20: // COUPON_COUNT
          return COUPON_COUNT;
        case 21: // COUPON_ID_0
          return COUPON_ID_0;
        case 22: // COUPON_FEE_0
          return COUPON_FEE_0;
        case 23: // TRANSACTION_ID
          return TRANSACTION_ID;
        case 24: // OUT_TRADE_NO
          return OUT_TRADE_NO;
        case 25: // ATTACH
          return ATTACH;
        case 26: // TIME_END
          return TIME_END;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTAL_FEE_ISSET_ID = 0;
  private static final int __CASH_FEE_ISSET_ID = 1;
  private static final int __COUPON_FEE_ISSET_ID = 2;
  private static final int __COUPON_COUNT_ISSET_ID = 3;
  private static final int __COUPON_FEE_0_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RETURN_CODE, new org.apache.thrift.meta_data.FieldMetaData("return_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RETURN_MSG, new org.apache.thrift.meta_data.FieldMetaData("return_msg", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPID, new org.apache.thrift.meta_data.FieldMetaData("appid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MCH_ID, new org.apache.thrift.meta_data.FieldMetaData("mch_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DEVICE_INFO, new org.apache.thrift.meta_data.FieldMetaData("device_info", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NONCE_STR, new org.apache.thrift.meta_data.FieldMetaData("nonce_str", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SIGN, new org.apache.thrift.meta_data.FieldMetaData("sign", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESULT_CODE, new org.apache.thrift.meta_data.FieldMetaData("result_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERR_CODE, new org.apache.thrift.meta_data.FieldMetaData("err_code", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERR_CODE_DES, new org.apache.thrift.meta_data.FieldMetaData("err_code_des", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPENID, new org.apache.thrift.meta_data.FieldMetaData("openid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SUBSCRIBE, new org.apache.thrift.meta_data.FieldMetaData("is_subscribe", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRADE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("trade_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_TYPE, new org.apache.thrift.meta_data.FieldMetaData("bank_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TOTAL_FEE, new org.apache.thrift.meta_data.FieldMetaData("total_fee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FEE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("fee_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CASH_FEE, new org.apache.thrift.meta_data.FieldMetaData("cash_fee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CASH_FEE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("cash_fee_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUPON_FEE, new org.apache.thrift.meta_data.FieldMetaData("coupon_fee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COUPON_COUNT, new org.apache.thrift.meta_data.FieldMetaData("coupon_count", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.COUPON_ID_0, new org.apache.thrift.meta_data.FieldMetaData("coupon_id_0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COUPON_FEE_0, new org.apache.thrift.meta_data.FieldMetaData("coupon_fee_0", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TRANSACTION_ID, new org.apache.thrift.meta_data.FieldMetaData("transaction_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OUT_TRADE_NO, new org.apache.thrift.meta_data.FieldMetaData("out_trade_no", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ATTACH, new org.apache.thrift.meta_data.FieldMetaData("attach", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIME_END, new org.apache.thrift.meta_data.FieldMetaData("time_end", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(WXPayNotify.class, metaDataMap);
  }

  public WXPayNotify() {
  }

  public WXPayNotify(
    java.lang.String return_code,
    java.lang.String return_msg,
    java.lang.String appid,
    java.lang.String mch_id,
    java.lang.String device_info,
    java.lang.String nonce_str,
    java.lang.String sign,
    java.lang.String result_code,
    java.lang.String err_code,
    java.lang.String err_code_des,
    java.lang.String openid,
    java.lang.String is_subscribe,
    java.lang.String trade_type,
    java.lang.String bank_type,
    long total_fee,
    java.lang.String fee_type,
    long cash_fee,
    java.lang.String cash_fee_type,
    long coupon_fee,
    long coupon_count,
    java.lang.String coupon_id_0,
    long coupon_fee_0,
    java.lang.String transaction_id,
    java.lang.String out_trade_no,
    java.lang.String attach,
    java.lang.String time_end)
  {
    this();
    this.return_code = return_code;
    this.return_msg = return_msg;
    this.appid = appid;
    this.mch_id = mch_id;
    this.device_info = device_info;
    this.nonce_str = nonce_str;
    this.sign = sign;
    this.result_code = result_code;
    this.err_code = err_code;
    this.err_code_des = err_code_des;
    this.openid = openid;
    this.is_subscribe = is_subscribe;
    this.trade_type = trade_type;
    this.bank_type = bank_type;
    this.total_fee = total_fee;
    setTotal_feeIsSet(true);
    this.fee_type = fee_type;
    this.cash_fee = cash_fee;
    setCash_feeIsSet(true);
    this.cash_fee_type = cash_fee_type;
    this.coupon_fee = coupon_fee;
    setCoupon_feeIsSet(true);
    this.coupon_count = coupon_count;
    setCoupon_countIsSet(true);
    this.coupon_id_0 = coupon_id_0;
    this.coupon_fee_0 = coupon_fee_0;
    setCoupon_fee_0IsSet(true);
    this.transaction_id = transaction_id;
    this.out_trade_no = out_trade_no;
    this.attach = attach;
    this.time_end = time_end;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public WXPayNotify(WXPayNotify other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetReturn_code()) {
      this.return_code = other.return_code;
    }
    if (other.isSetReturn_msg()) {
      this.return_msg = other.return_msg;
    }
    if (other.isSetAppid()) {
      this.appid = other.appid;
    }
    if (other.isSetMch_id()) {
      this.mch_id = other.mch_id;
    }
    if (other.isSetDevice_info()) {
      this.device_info = other.device_info;
    }
    if (other.isSetNonce_str()) {
      this.nonce_str = other.nonce_str;
    }
    if (other.isSetSign()) {
      this.sign = other.sign;
    }
    if (other.isSetResult_code()) {
      this.result_code = other.result_code;
    }
    if (other.isSetErr_code()) {
      this.err_code = other.err_code;
    }
    if (other.isSetErr_code_des()) {
      this.err_code_des = other.err_code_des;
    }
    if (other.isSetOpenid()) {
      this.openid = other.openid;
    }
    if (other.isSetIs_subscribe()) {
      this.is_subscribe = other.is_subscribe;
    }
    if (other.isSetTrade_type()) {
      this.trade_type = other.trade_type;
    }
    if (other.isSetBank_type()) {
      this.bank_type = other.bank_type;
    }
    this.total_fee = other.total_fee;
    if (other.isSetFee_type()) {
      this.fee_type = other.fee_type;
    }
    this.cash_fee = other.cash_fee;
    if (other.isSetCash_fee_type()) {
      this.cash_fee_type = other.cash_fee_type;
    }
    this.coupon_fee = other.coupon_fee;
    this.coupon_count = other.coupon_count;
    if (other.isSetCoupon_id_0()) {
      this.coupon_id_0 = other.coupon_id_0;
    }
    this.coupon_fee_0 = other.coupon_fee_0;
    if (other.isSetTransaction_id()) {
      this.transaction_id = other.transaction_id;
    }
    if (other.isSetOut_trade_no()) {
      this.out_trade_no = other.out_trade_no;
    }
    if (other.isSetAttach()) {
      this.attach = other.attach;
    }
    if (other.isSetTime_end()) {
      this.time_end = other.time_end;
    }
  }

  public WXPayNotify deepCopy() {
    return new WXPayNotify(this);
  }

  @Override
  public void clear() {
    this.return_code = null;
    this.return_msg = null;
    this.appid = null;
    this.mch_id = null;
    this.device_info = null;
    this.nonce_str = null;
    this.sign = null;
    this.result_code = null;
    this.err_code = null;
    this.err_code_des = null;
    this.openid = null;
    this.is_subscribe = null;
    this.trade_type = null;
    this.bank_type = null;
    setTotal_feeIsSet(false);
    this.total_fee = 0;
    this.fee_type = null;
    setCash_feeIsSet(false);
    this.cash_fee = 0;
    this.cash_fee_type = null;
    setCoupon_feeIsSet(false);
    this.coupon_fee = 0;
    setCoupon_countIsSet(false);
    this.coupon_count = 0;
    this.coupon_id_0 = null;
    setCoupon_fee_0IsSet(false);
    this.coupon_fee_0 = 0;
    this.transaction_id = null;
    this.out_trade_no = null;
    this.attach = null;
    this.time_end = null;
  }

  public java.lang.String getReturn_code() {
    return this.return_code;
  }

  public WXPayNotify setReturn_code(java.lang.String return_code) {
    this.return_code = return_code;
    return this;
  }

  public void unsetReturn_code() {
    this.return_code = null;
  }

  /** Returns true if field return_code is set (has been assigned a value) and false otherwise */
  public boolean isSetReturn_code() {
    return this.return_code != null;
  }

  public void setReturn_codeIsSet(boolean value) {
    if (!value) {
      this.return_code = null;
    }
  }

  public java.lang.String getReturn_msg() {
    return this.return_msg;
  }

  public WXPayNotify setReturn_msg(java.lang.String return_msg) {
    this.return_msg = return_msg;
    return this;
  }

  public void unsetReturn_msg() {
    this.return_msg = null;
  }

  /** Returns true if field return_msg is set (has been assigned a value) and false otherwise */
  public boolean isSetReturn_msg() {
    return this.return_msg != null;
  }

  public void setReturn_msgIsSet(boolean value) {
    if (!value) {
      this.return_msg = null;
    }
  }

  public java.lang.String getAppid() {
    return this.appid;
  }

  public WXPayNotify setAppid(java.lang.String appid) {
    this.appid = appid;
    return this;
  }

  public void unsetAppid() {
    this.appid = null;
  }

  /** Returns true if field appid is set (has been assigned a value) and false otherwise */
  public boolean isSetAppid() {
    return this.appid != null;
  }

  public void setAppidIsSet(boolean value) {
    if (!value) {
      this.appid = null;
    }
  }

  public java.lang.String getMch_id() {
    return this.mch_id;
  }

  public WXPayNotify setMch_id(java.lang.String mch_id) {
    this.mch_id = mch_id;
    return this;
  }

  public void unsetMch_id() {
    this.mch_id = null;
  }

  /** Returns true if field mch_id is set (has been assigned a value) and false otherwise */
  public boolean isSetMch_id() {
    return this.mch_id != null;
  }

  public void setMch_idIsSet(boolean value) {
    if (!value) {
      this.mch_id = null;
    }
  }

  public java.lang.String getDevice_info() {
    return this.device_info;
  }

  public WXPayNotify setDevice_info(java.lang.String device_info) {
    this.device_info = device_info;
    return this;
  }

  public void unsetDevice_info() {
    this.device_info = null;
  }

  /** Returns true if field device_info is set (has been assigned a value) and false otherwise */
  public boolean isSetDevice_info() {
    return this.device_info != null;
  }

  public void setDevice_infoIsSet(boolean value) {
    if (!value) {
      this.device_info = null;
    }
  }

  public java.lang.String getNonce_str() {
    return this.nonce_str;
  }

  public WXPayNotify setNonce_str(java.lang.String nonce_str) {
    this.nonce_str = nonce_str;
    return this;
  }

  public void unsetNonce_str() {
    this.nonce_str = null;
  }

  /** Returns true if field nonce_str is set (has been assigned a value) and false otherwise */
  public boolean isSetNonce_str() {
    return this.nonce_str != null;
  }

  public void setNonce_strIsSet(boolean value) {
    if (!value) {
      this.nonce_str = null;
    }
  }

  public java.lang.String getSign() {
    return this.sign;
  }

  public WXPayNotify setSign(java.lang.String sign) {
    this.sign = sign;
    return this;
  }

  public void unsetSign() {
    this.sign = null;
  }

  /** Returns true if field sign is set (has been assigned a value) and false otherwise */
  public boolean isSetSign() {
    return this.sign != null;
  }

  public void setSignIsSet(boolean value) {
    if (!value) {
      this.sign = null;
    }
  }

  public java.lang.String getResult_code() {
    return this.result_code;
  }

  public WXPayNotify setResult_code(java.lang.String result_code) {
    this.result_code = result_code;
    return this;
  }

  public void unsetResult_code() {
    this.result_code = null;
  }

  /** Returns true if field result_code is set (has been assigned a value) and false otherwise */
  public boolean isSetResult_code() {
    return this.result_code != null;
  }

  public void setResult_codeIsSet(boolean value) {
    if (!value) {
      this.result_code = null;
    }
  }

  public java.lang.String getErr_code() {
    return this.err_code;
  }

  public WXPayNotify setErr_code(java.lang.String err_code) {
    this.err_code = err_code;
    return this;
  }

  public void unsetErr_code() {
    this.err_code = null;
  }

  /** Returns true if field err_code is set (has been assigned a value) and false otherwise */
  public boolean isSetErr_code() {
    return this.err_code != null;
  }

  public void setErr_codeIsSet(boolean value) {
    if (!value) {
      this.err_code = null;
    }
  }

  public java.lang.String getErr_code_des() {
    return this.err_code_des;
  }

  public WXPayNotify setErr_code_des(java.lang.String err_code_des) {
    this.err_code_des = err_code_des;
    return this;
  }

  public void unsetErr_code_des() {
    this.err_code_des = null;
  }

  /** Returns true if field err_code_des is set (has been assigned a value) and false otherwise */
  public boolean isSetErr_code_des() {
    return this.err_code_des != null;
  }

  public void setErr_code_desIsSet(boolean value) {
    if (!value) {
      this.err_code_des = null;
    }
  }

  public java.lang.String getOpenid() {
    return this.openid;
  }

  public WXPayNotify setOpenid(java.lang.String openid) {
    this.openid = openid;
    return this;
  }

  public void unsetOpenid() {
    this.openid = null;
  }

  /** Returns true if field openid is set (has been assigned a value) and false otherwise */
  public boolean isSetOpenid() {
    return this.openid != null;
  }

  public void setOpenidIsSet(boolean value) {
    if (!value) {
      this.openid = null;
    }
  }

  public java.lang.String getIs_subscribe() {
    return this.is_subscribe;
  }

  public WXPayNotify setIs_subscribe(java.lang.String is_subscribe) {
    this.is_subscribe = is_subscribe;
    return this;
  }

  public void unsetIs_subscribe() {
    this.is_subscribe = null;
  }

  /** Returns true if field is_subscribe is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_subscribe() {
    return this.is_subscribe != null;
  }

  public void setIs_subscribeIsSet(boolean value) {
    if (!value) {
      this.is_subscribe = null;
    }
  }

  public java.lang.String getTrade_type() {
    return this.trade_type;
  }

  public WXPayNotify setTrade_type(java.lang.String trade_type) {
    this.trade_type = trade_type;
    return this;
  }

  public void unsetTrade_type() {
    this.trade_type = null;
  }

  /** Returns true if field trade_type is set (has been assigned a value) and false otherwise */
  public boolean isSetTrade_type() {
    return this.trade_type != null;
  }

  public void setTrade_typeIsSet(boolean value) {
    if (!value) {
      this.trade_type = null;
    }
  }

  public java.lang.String getBank_type() {
    return this.bank_type;
  }

  public WXPayNotify setBank_type(java.lang.String bank_type) {
    this.bank_type = bank_type;
    return this;
  }

  public void unsetBank_type() {
    this.bank_type = null;
  }

  /** Returns true if field bank_type is set (has been assigned a value) and false otherwise */
  public boolean isSetBank_type() {
    return this.bank_type != null;
  }

  public void setBank_typeIsSet(boolean value) {
    if (!value) {
      this.bank_type = null;
    }
  }

  public long getTotal_fee() {
    return this.total_fee;
  }

  public WXPayNotify setTotal_fee(long total_fee) {
    this.total_fee = total_fee;
    setTotal_feeIsSet(true);
    return this;
  }

  public void unsetTotal_fee() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TOTAL_FEE_ISSET_ID);
  }

  /** Returns true if field total_fee is set (has been assigned a value) and false otherwise */
  public boolean isSetTotal_fee() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TOTAL_FEE_ISSET_ID);
  }

  public void setTotal_feeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TOTAL_FEE_ISSET_ID, value);
  }

  public java.lang.String getFee_type() {
    return this.fee_type;
  }

  public WXPayNotify setFee_type(java.lang.String fee_type) {
    this.fee_type = fee_type;
    return this;
  }

  public void unsetFee_type() {
    this.fee_type = null;
  }

  /** Returns true if field fee_type is set (has been assigned a value) and false otherwise */
  public boolean isSetFee_type() {
    return this.fee_type != null;
  }

  public void setFee_typeIsSet(boolean value) {
    if (!value) {
      this.fee_type = null;
    }
  }

  public long getCash_fee() {
    return this.cash_fee;
  }

  public WXPayNotify setCash_fee(long cash_fee) {
    this.cash_fee = cash_fee;
    setCash_feeIsSet(true);
    return this;
  }

  public void unsetCash_fee() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CASH_FEE_ISSET_ID);
  }

  /** Returns true if field cash_fee is set (has been assigned a value) and false otherwise */
  public boolean isSetCash_fee() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CASH_FEE_ISSET_ID);
  }

  public void setCash_feeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CASH_FEE_ISSET_ID, value);
  }

  public java.lang.String getCash_fee_type() {
    return this.cash_fee_type;
  }

  public WXPayNotify setCash_fee_type(java.lang.String cash_fee_type) {
    this.cash_fee_type = cash_fee_type;
    return this;
  }

  public void unsetCash_fee_type() {
    this.cash_fee_type = null;
  }

  /** Returns true if field cash_fee_type is set (has been assigned a value) and false otherwise */
  public boolean isSetCash_fee_type() {
    return this.cash_fee_type != null;
  }

  public void setCash_fee_typeIsSet(boolean value) {
    if (!value) {
      this.cash_fee_type = null;
    }
  }

  public long getCoupon_fee() {
    return this.coupon_fee;
  }

  public WXPayNotify setCoupon_fee(long coupon_fee) {
    this.coupon_fee = coupon_fee;
    setCoupon_feeIsSet(true);
    return this;
  }

  public void unsetCoupon_fee() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUPON_FEE_ISSET_ID);
  }

  /** Returns true if field coupon_fee is set (has been assigned a value) and false otherwise */
  public boolean isSetCoupon_fee() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUPON_FEE_ISSET_ID);
  }

  public void setCoupon_feeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUPON_FEE_ISSET_ID, value);
  }

  public long getCoupon_count() {
    return this.coupon_count;
  }

  public WXPayNotify setCoupon_count(long coupon_count) {
    this.coupon_count = coupon_count;
    setCoupon_countIsSet(true);
    return this;
  }

  public void unsetCoupon_count() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUPON_COUNT_ISSET_ID);
  }

  /** Returns true if field coupon_count is set (has been assigned a value) and false otherwise */
  public boolean isSetCoupon_count() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUPON_COUNT_ISSET_ID);
  }

  public void setCoupon_countIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUPON_COUNT_ISSET_ID, value);
  }

  public java.lang.String getCoupon_id_0() {
    return this.coupon_id_0;
  }

  public WXPayNotify setCoupon_id_0(java.lang.String coupon_id_0) {
    this.coupon_id_0 = coupon_id_0;
    return this;
  }

  public void unsetCoupon_id_0() {
    this.coupon_id_0 = null;
  }

  /** Returns true if field coupon_id_0 is set (has been assigned a value) and false otherwise */
  public boolean isSetCoupon_id_0() {
    return this.coupon_id_0 != null;
  }

  public void setCoupon_id_0IsSet(boolean value) {
    if (!value) {
      this.coupon_id_0 = null;
    }
  }

  public long getCoupon_fee_0() {
    return this.coupon_fee_0;
  }

  public WXPayNotify setCoupon_fee_0(long coupon_fee_0) {
    this.coupon_fee_0 = coupon_fee_0;
    setCoupon_fee_0IsSet(true);
    return this;
  }

  public void unsetCoupon_fee_0() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __COUPON_FEE_0_ISSET_ID);
  }

  /** Returns true if field coupon_fee_0 is set (has been assigned a value) and false otherwise */
  public boolean isSetCoupon_fee_0() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __COUPON_FEE_0_ISSET_ID);
  }

  public void setCoupon_fee_0IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __COUPON_FEE_0_ISSET_ID, value);
  }

  public java.lang.String getTransaction_id() {
    return this.transaction_id;
  }

  public WXPayNotify setTransaction_id(java.lang.String transaction_id) {
    this.transaction_id = transaction_id;
    return this;
  }

  public void unsetTransaction_id() {
    this.transaction_id = null;
  }

  /** Returns true if field transaction_id is set (has been assigned a value) and false otherwise */
  public boolean isSetTransaction_id() {
    return this.transaction_id != null;
  }

  public void setTransaction_idIsSet(boolean value) {
    if (!value) {
      this.transaction_id = null;
    }
  }

  public java.lang.String getOut_trade_no() {
    return this.out_trade_no;
  }

  public WXPayNotify setOut_trade_no(java.lang.String out_trade_no) {
    this.out_trade_no = out_trade_no;
    return this;
  }

  public void unsetOut_trade_no() {
    this.out_trade_no = null;
  }

  /** Returns true if field out_trade_no is set (has been assigned a value) and false otherwise */
  public boolean isSetOut_trade_no() {
    return this.out_trade_no != null;
  }

  public void setOut_trade_noIsSet(boolean value) {
    if (!value) {
      this.out_trade_no = null;
    }
  }

  public java.lang.String getAttach() {
    return this.attach;
  }

  public WXPayNotify setAttach(java.lang.String attach) {
    this.attach = attach;
    return this;
  }

  public void unsetAttach() {
    this.attach = null;
  }

  /** Returns true if field attach is set (has been assigned a value) and false otherwise */
  public boolean isSetAttach() {
    return this.attach != null;
  }

  public void setAttachIsSet(boolean value) {
    if (!value) {
      this.attach = null;
    }
  }

  public java.lang.String getTime_end() {
    return this.time_end;
  }

  public WXPayNotify setTime_end(java.lang.String time_end) {
    this.time_end = time_end;
    return this;
  }

  public void unsetTime_end() {
    this.time_end = null;
  }

  /** Returns true if field time_end is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_end() {
    return this.time_end != null;
  }

  public void setTime_endIsSet(boolean value) {
    if (!value) {
      this.time_end = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RETURN_CODE:
      if (value == null) {
        unsetReturn_code();
      } else {
        setReturn_code((java.lang.String)value);
      }
      break;

    case RETURN_MSG:
      if (value == null) {
        unsetReturn_msg();
      } else {
        setReturn_msg((java.lang.String)value);
      }
      break;

    case APPID:
      if (value == null) {
        unsetAppid();
      } else {
        setAppid((java.lang.String)value);
      }
      break;

    case MCH_ID:
      if (value == null) {
        unsetMch_id();
      } else {
        setMch_id((java.lang.String)value);
      }
      break;

    case DEVICE_INFO:
      if (value == null) {
        unsetDevice_info();
      } else {
        setDevice_info((java.lang.String)value);
      }
      break;

    case NONCE_STR:
      if (value == null) {
        unsetNonce_str();
      } else {
        setNonce_str((java.lang.String)value);
      }
      break;

    case SIGN:
      if (value == null) {
        unsetSign();
      } else {
        setSign((java.lang.String)value);
      }
      break;

    case RESULT_CODE:
      if (value == null) {
        unsetResult_code();
      } else {
        setResult_code((java.lang.String)value);
      }
      break;

    case ERR_CODE:
      if (value == null) {
        unsetErr_code();
      } else {
        setErr_code((java.lang.String)value);
      }
      break;

    case ERR_CODE_DES:
      if (value == null) {
        unsetErr_code_des();
      } else {
        setErr_code_des((java.lang.String)value);
      }
      break;

    case OPENID:
      if (value == null) {
        unsetOpenid();
      } else {
        setOpenid((java.lang.String)value);
      }
      break;

    case IS_SUBSCRIBE:
      if (value == null) {
        unsetIs_subscribe();
      } else {
        setIs_subscribe((java.lang.String)value);
      }
      break;

    case TRADE_TYPE:
      if (value == null) {
        unsetTrade_type();
      } else {
        setTrade_type((java.lang.String)value);
      }
      break;

    case BANK_TYPE:
      if (value == null) {
        unsetBank_type();
      } else {
        setBank_type((java.lang.String)value);
      }
      break;

    case TOTAL_FEE:
      if (value == null) {
        unsetTotal_fee();
      } else {
        setTotal_fee((java.lang.Long)value);
      }
      break;

    case FEE_TYPE:
      if (value == null) {
        unsetFee_type();
      } else {
        setFee_type((java.lang.String)value);
      }
      break;

    case CASH_FEE:
      if (value == null) {
        unsetCash_fee();
      } else {
        setCash_fee((java.lang.Long)value);
      }
      break;

    case CASH_FEE_TYPE:
      if (value == null) {
        unsetCash_fee_type();
      } else {
        setCash_fee_type((java.lang.String)value);
      }
      break;

    case COUPON_FEE:
      if (value == null) {
        unsetCoupon_fee();
      } else {
        setCoupon_fee((java.lang.Long)value);
      }
      break;

    case COUPON_COUNT:
      if (value == null) {
        unsetCoupon_count();
      } else {
        setCoupon_count((java.lang.Long)value);
      }
      break;

    case COUPON_ID_0:
      if (value == null) {
        unsetCoupon_id_0();
      } else {
        setCoupon_id_0((java.lang.String)value);
      }
      break;

    case COUPON_FEE_0:
      if (value == null) {
        unsetCoupon_fee_0();
      } else {
        setCoupon_fee_0((java.lang.Long)value);
      }
      break;

    case TRANSACTION_ID:
      if (value == null) {
        unsetTransaction_id();
      } else {
        setTransaction_id((java.lang.String)value);
      }
      break;

    case OUT_TRADE_NO:
      if (value == null) {
        unsetOut_trade_no();
      } else {
        setOut_trade_no((java.lang.String)value);
      }
      break;

    case ATTACH:
      if (value == null) {
        unsetAttach();
      } else {
        setAttach((java.lang.String)value);
      }
      break;

    case TIME_END:
      if (value == null) {
        unsetTime_end();
      } else {
        setTime_end((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RETURN_CODE:
      return getReturn_code();

    case RETURN_MSG:
      return getReturn_msg();

    case APPID:
      return getAppid();

    case MCH_ID:
      return getMch_id();

    case DEVICE_INFO:
      return getDevice_info();

    case NONCE_STR:
      return getNonce_str();

    case SIGN:
      return getSign();

    case RESULT_CODE:
      return getResult_code();

    case ERR_CODE:
      return getErr_code();

    case ERR_CODE_DES:
      return getErr_code_des();

    case OPENID:
      return getOpenid();

    case IS_SUBSCRIBE:
      return getIs_subscribe();

    case TRADE_TYPE:
      return getTrade_type();

    case BANK_TYPE:
      return getBank_type();

    case TOTAL_FEE:
      return getTotal_fee();

    case FEE_TYPE:
      return getFee_type();

    case CASH_FEE:
      return getCash_fee();

    case CASH_FEE_TYPE:
      return getCash_fee_type();

    case COUPON_FEE:
      return getCoupon_fee();

    case COUPON_COUNT:
      return getCoupon_count();

    case COUPON_ID_0:
      return getCoupon_id_0();

    case COUPON_FEE_0:
      return getCoupon_fee_0();

    case TRANSACTION_ID:
      return getTransaction_id();

    case OUT_TRADE_NO:
      return getOut_trade_no();

    case ATTACH:
      return getAttach();

    case TIME_END:
      return getTime_end();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RETURN_CODE:
      return isSetReturn_code();
    case RETURN_MSG:
      return isSetReturn_msg();
    case APPID:
      return isSetAppid();
    case MCH_ID:
      return isSetMch_id();
    case DEVICE_INFO:
      return isSetDevice_info();
    case NONCE_STR:
      return isSetNonce_str();
    case SIGN:
      return isSetSign();
    case RESULT_CODE:
      return isSetResult_code();
    case ERR_CODE:
      return isSetErr_code();
    case ERR_CODE_DES:
      return isSetErr_code_des();
    case OPENID:
      return isSetOpenid();
    case IS_SUBSCRIBE:
      return isSetIs_subscribe();
    case TRADE_TYPE:
      return isSetTrade_type();
    case BANK_TYPE:
      return isSetBank_type();
    case TOTAL_FEE:
      return isSetTotal_fee();
    case FEE_TYPE:
      return isSetFee_type();
    case CASH_FEE:
      return isSetCash_fee();
    case CASH_FEE_TYPE:
      return isSetCash_fee_type();
    case COUPON_FEE:
      return isSetCoupon_fee();
    case COUPON_COUNT:
      return isSetCoupon_count();
    case COUPON_ID_0:
      return isSetCoupon_id_0();
    case COUPON_FEE_0:
      return isSetCoupon_fee_0();
    case TRANSACTION_ID:
      return isSetTransaction_id();
    case OUT_TRADE_NO:
      return isSetOut_trade_no();
    case ATTACH:
      return isSetAttach();
    case TIME_END:
      return isSetTime_end();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof WXPayNotify)
      return this.equals((WXPayNotify)that);
    return false;
  }

  public boolean equals(WXPayNotify that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_return_code = true && this.isSetReturn_code();
    boolean that_present_return_code = true && that.isSetReturn_code();
    if (this_present_return_code || that_present_return_code) {
      if (!(this_present_return_code && that_present_return_code))
        return false;
      if (!this.return_code.equals(that.return_code))
        return false;
    }

    boolean this_present_return_msg = true && this.isSetReturn_msg();
    boolean that_present_return_msg = true && that.isSetReturn_msg();
    if (this_present_return_msg || that_present_return_msg) {
      if (!(this_present_return_msg && that_present_return_msg))
        return false;
      if (!this.return_msg.equals(that.return_msg))
        return false;
    }

    boolean this_present_appid = true && this.isSetAppid();
    boolean that_present_appid = true && that.isSetAppid();
    if (this_present_appid || that_present_appid) {
      if (!(this_present_appid && that_present_appid))
        return false;
      if (!this.appid.equals(that.appid))
        return false;
    }

    boolean this_present_mch_id = true && this.isSetMch_id();
    boolean that_present_mch_id = true && that.isSetMch_id();
    if (this_present_mch_id || that_present_mch_id) {
      if (!(this_present_mch_id && that_present_mch_id))
        return false;
      if (!this.mch_id.equals(that.mch_id))
        return false;
    }

    boolean this_present_device_info = true && this.isSetDevice_info();
    boolean that_present_device_info = true && that.isSetDevice_info();
    if (this_present_device_info || that_present_device_info) {
      if (!(this_present_device_info && that_present_device_info))
        return false;
      if (!this.device_info.equals(that.device_info))
        return false;
    }

    boolean this_present_nonce_str = true && this.isSetNonce_str();
    boolean that_present_nonce_str = true && that.isSetNonce_str();
    if (this_present_nonce_str || that_present_nonce_str) {
      if (!(this_present_nonce_str && that_present_nonce_str))
        return false;
      if (!this.nonce_str.equals(that.nonce_str))
        return false;
    }

    boolean this_present_sign = true && this.isSetSign();
    boolean that_present_sign = true && that.isSetSign();
    if (this_present_sign || that_present_sign) {
      if (!(this_present_sign && that_present_sign))
        return false;
      if (!this.sign.equals(that.sign))
        return false;
    }

    boolean this_present_result_code = true && this.isSetResult_code();
    boolean that_present_result_code = true && that.isSetResult_code();
    if (this_present_result_code || that_present_result_code) {
      if (!(this_present_result_code && that_present_result_code))
        return false;
      if (!this.result_code.equals(that.result_code))
        return false;
    }

    boolean this_present_err_code = true && this.isSetErr_code();
    boolean that_present_err_code = true && that.isSetErr_code();
    if (this_present_err_code || that_present_err_code) {
      if (!(this_present_err_code && that_present_err_code))
        return false;
      if (!this.err_code.equals(that.err_code))
        return false;
    }

    boolean this_present_err_code_des = true && this.isSetErr_code_des();
    boolean that_present_err_code_des = true && that.isSetErr_code_des();
    if (this_present_err_code_des || that_present_err_code_des) {
      if (!(this_present_err_code_des && that_present_err_code_des))
        return false;
      if (!this.err_code_des.equals(that.err_code_des))
        return false;
    }

    boolean this_present_openid = true && this.isSetOpenid();
    boolean that_present_openid = true && that.isSetOpenid();
    if (this_present_openid || that_present_openid) {
      if (!(this_present_openid && that_present_openid))
        return false;
      if (!this.openid.equals(that.openid))
        return false;
    }

    boolean this_present_is_subscribe = true && this.isSetIs_subscribe();
    boolean that_present_is_subscribe = true && that.isSetIs_subscribe();
    if (this_present_is_subscribe || that_present_is_subscribe) {
      if (!(this_present_is_subscribe && that_present_is_subscribe))
        return false;
      if (!this.is_subscribe.equals(that.is_subscribe))
        return false;
    }

    boolean this_present_trade_type = true && this.isSetTrade_type();
    boolean that_present_trade_type = true && that.isSetTrade_type();
    if (this_present_trade_type || that_present_trade_type) {
      if (!(this_present_trade_type && that_present_trade_type))
        return false;
      if (!this.trade_type.equals(that.trade_type))
        return false;
    }

    boolean this_present_bank_type = true && this.isSetBank_type();
    boolean that_present_bank_type = true && that.isSetBank_type();
    if (this_present_bank_type || that_present_bank_type) {
      if (!(this_present_bank_type && that_present_bank_type))
        return false;
      if (!this.bank_type.equals(that.bank_type))
        return false;
    }

    boolean this_present_total_fee = true;
    boolean that_present_total_fee = true;
    if (this_present_total_fee || that_present_total_fee) {
      if (!(this_present_total_fee && that_present_total_fee))
        return false;
      if (this.total_fee != that.total_fee)
        return false;
    }

    boolean this_present_fee_type = true && this.isSetFee_type();
    boolean that_present_fee_type = true && that.isSetFee_type();
    if (this_present_fee_type || that_present_fee_type) {
      if (!(this_present_fee_type && that_present_fee_type))
        return false;
      if (!this.fee_type.equals(that.fee_type))
        return false;
    }

    boolean this_present_cash_fee = true;
    boolean that_present_cash_fee = true;
    if (this_present_cash_fee || that_present_cash_fee) {
      if (!(this_present_cash_fee && that_present_cash_fee))
        return false;
      if (this.cash_fee != that.cash_fee)
        return false;
    }

    boolean this_present_cash_fee_type = true && this.isSetCash_fee_type();
    boolean that_present_cash_fee_type = true && that.isSetCash_fee_type();
    if (this_present_cash_fee_type || that_present_cash_fee_type) {
      if (!(this_present_cash_fee_type && that_present_cash_fee_type))
        return false;
      if (!this.cash_fee_type.equals(that.cash_fee_type))
        return false;
    }

    boolean this_present_coupon_fee = true;
    boolean that_present_coupon_fee = true;
    if (this_present_coupon_fee || that_present_coupon_fee) {
      if (!(this_present_coupon_fee && that_present_coupon_fee))
        return false;
      if (this.coupon_fee != that.coupon_fee)
        return false;
    }

    boolean this_present_coupon_count = true;
    boolean that_present_coupon_count = true;
    if (this_present_coupon_count || that_present_coupon_count) {
      if (!(this_present_coupon_count && that_present_coupon_count))
        return false;
      if (this.coupon_count != that.coupon_count)
        return false;
    }

    boolean this_present_coupon_id_0 = true && this.isSetCoupon_id_0();
    boolean that_present_coupon_id_0 = true && that.isSetCoupon_id_0();
    if (this_present_coupon_id_0 || that_present_coupon_id_0) {
      if (!(this_present_coupon_id_0 && that_present_coupon_id_0))
        return false;
      if (!this.coupon_id_0.equals(that.coupon_id_0))
        return false;
    }

    boolean this_present_coupon_fee_0 = true;
    boolean that_present_coupon_fee_0 = true;
    if (this_present_coupon_fee_0 || that_present_coupon_fee_0) {
      if (!(this_present_coupon_fee_0 && that_present_coupon_fee_0))
        return false;
      if (this.coupon_fee_0 != that.coupon_fee_0)
        return false;
    }

    boolean this_present_transaction_id = true && this.isSetTransaction_id();
    boolean that_present_transaction_id = true && that.isSetTransaction_id();
    if (this_present_transaction_id || that_present_transaction_id) {
      if (!(this_present_transaction_id && that_present_transaction_id))
        return false;
      if (!this.transaction_id.equals(that.transaction_id))
        return false;
    }

    boolean this_present_out_trade_no = true && this.isSetOut_trade_no();
    boolean that_present_out_trade_no = true && that.isSetOut_trade_no();
    if (this_present_out_trade_no || that_present_out_trade_no) {
      if (!(this_present_out_trade_no && that_present_out_trade_no))
        return false;
      if (!this.out_trade_no.equals(that.out_trade_no))
        return false;
    }

    boolean this_present_attach = true && this.isSetAttach();
    boolean that_present_attach = true && that.isSetAttach();
    if (this_present_attach || that_present_attach) {
      if (!(this_present_attach && that_present_attach))
        return false;
      if (!this.attach.equals(that.attach))
        return false;
    }

    boolean this_present_time_end = true && this.isSetTime_end();
    boolean that_present_time_end = true && that.isSetTime_end();
    if (this_present_time_end || that_present_time_end) {
      if (!(this_present_time_end && that_present_time_end))
        return false;
      if (!this.time_end.equals(that.time_end))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetReturn_code()) ? 131071 : 524287);
    if (isSetReturn_code())
      hashCode = hashCode * 8191 + return_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetReturn_msg()) ? 131071 : 524287);
    if (isSetReturn_msg())
      hashCode = hashCode * 8191 + return_msg.hashCode();

    hashCode = hashCode * 8191 + ((isSetAppid()) ? 131071 : 524287);
    if (isSetAppid())
      hashCode = hashCode * 8191 + appid.hashCode();

    hashCode = hashCode * 8191 + ((isSetMch_id()) ? 131071 : 524287);
    if (isSetMch_id())
      hashCode = hashCode * 8191 + mch_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetDevice_info()) ? 131071 : 524287);
    if (isSetDevice_info())
      hashCode = hashCode * 8191 + device_info.hashCode();

    hashCode = hashCode * 8191 + ((isSetNonce_str()) ? 131071 : 524287);
    if (isSetNonce_str())
      hashCode = hashCode * 8191 + nonce_str.hashCode();

    hashCode = hashCode * 8191 + ((isSetSign()) ? 131071 : 524287);
    if (isSetSign())
      hashCode = hashCode * 8191 + sign.hashCode();

    hashCode = hashCode * 8191 + ((isSetResult_code()) ? 131071 : 524287);
    if (isSetResult_code())
      hashCode = hashCode * 8191 + result_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetErr_code()) ? 131071 : 524287);
    if (isSetErr_code())
      hashCode = hashCode * 8191 + err_code.hashCode();

    hashCode = hashCode * 8191 + ((isSetErr_code_des()) ? 131071 : 524287);
    if (isSetErr_code_des())
      hashCode = hashCode * 8191 + err_code_des.hashCode();

    hashCode = hashCode * 8191 + ((isSetOpenid()) ? 131071 : 524287);
    if (isSetOpenid())
      hashCode = hashCode * 8191 + openid.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_subscribe()) ? 131071 : 524287);
    if (isSetIs_subscribe())
      hashCode = hashCode * 8191 + is_subscribe.hashCode();

    hashCode = hashCode * 8191 + ((isSetTrade_type()) ? 131071 : 524287);
    if (isSetTrade_type())
      hashCode = hashCode * 8191 + trade_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetBank_type()) ? 131071 : 524287);
    if (isSetBank_type())
      hashCode = hashCode * 8191 + bank_type.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(total_fee);

    hashCode = hashCode * 8191 + ((isSetFee_type()) ? 131071 : 524287);
    if (isSetFee_type())
      hashCode = hashCode * 8191 + fee_type.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(cash_fee);

    hashCode = hashCode * 8191 + ((isSetCash_fee_type()) ? 131071 : 524287);
    if (isSetCash_fee_type())
      hashCode = hashCode * 8191 + cash_fee_type.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(coupon_fee);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(coupon_count);

    hashCode = hashCode * 8191 + ((isSetCoupon_id_0()) ? 131071 : 524287);
    if (isSetCoupon_id_0())
      hashCode = hashCode * 8191 + coupon_id_0.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(coupon_fee_0);

    hashCode = hashCode * 8191 + ((isSetTransaction_id()) ? 131071 : 524287);
    if (isSetTransaction_id())
      hashCode = hashCode * 8191 + transaction_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetOut_trade_no()) ? 131071 : 524287);
    if (isSetOut_trade_no())
      hashCode = hashCode * 8191 + out_trade_no.hashCode();

    hashCode = hashCode * 8191 + ((isSetAttach()) ? 131071 : 524287);
    if (isSetAttach())
      hashCode = hashCode * 8191 + attach.hashCode();

    hashCode = hashCode * 8191 + ((isSetTime_end()) ? 131071 : 524287);
    if (isSetTime_end())
      hashCode = hashCode * 8191 + time_end.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(WXPayNotify other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetReturn_code()).compareTo(other.isSetReturn_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturn_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.return_code, other.return_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReturn_msg()).compareTo(other.isSetReturn_msg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReturn_msg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.return_msg, other.return_msg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAppid()).compareTo(other.isSetAppid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAppid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.appid, other.appid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetMch_id()).compareTo(other.isSetMch_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMch_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mch_id, other.mch_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDevice_info()).compareTo(other.isSetDevice_info());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDevice_info()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.device_info, other.device_info);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetNonce_str()).compareTo(other.isSetNonce_str());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNonce_str()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nonce_str, other.nonce_str);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSign()).compareTo(other.isSetSign());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSign()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sign, other.sign);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetResult_code()).compareTo(other.isSetResult_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResult_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.result_code, other.result_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErr_code()).compareTo(other.isSetErr_code());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErr_code()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err_code, other.err_code);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetErr_code_des()).compareTo(other.isSetErr_code_des());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetErr_code_des()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err_code_des, other.err_code_des);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOpenid()).compareTo(other.isSetOpenid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOpenid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.openid, other.openid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIs_subscribe()).compareTo(other.isSetIs_subscribe());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_subscribe()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_subscribe, other.is_subscribe);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTrade_type()).compareTo(other.isSetTrade_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrade_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trade_type, other.trade_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetBank_type()).compareTo(other.isSetBank_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBank_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bank_type, other.bank_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTotal_fee()).compareTo(other.isSetTotal_fee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotal_fee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.total_fee, other.total_fee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFee_type()).compareTo(other.isSetFee_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFee_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fee_type, other.fee_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCash_fee()).compareTo(other.isSetCash_fee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCash_fee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cash_fee, other.cash_fee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCash_fee_type()).compareTo(other.isSetCash_fee_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCash_fee_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cash_fee_type, other.cash_fee_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCoupon_fee()).compareTo(other.isSetCoupon_fee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoupon_fee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.coupon_fee, other.coupon_fee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCoupon_count()).compareTo(other.isSetCoupon_count());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoupon_count()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.coupon_count, other.coupon_count);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCoupon_id_0()).compareTo(other.isSetCoupon_id_0());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoupon_id_0()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.coupon_id_0, other.coupon_id_0);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCoupon_fee_0()).compareTo(other.isSetCoupon_fee_0());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCoupon_fee_0()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.coupon_fee_0, other.coupon_fee_0);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTransaction_id()).compareTo(other.isSetTransaction_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransaction_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transaction_id, other.transaction_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOut_trade_no()).compareTo(other.isSetOut_trade_no());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOut_trade_no()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.out_trade_no, other.out_trade_no);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAttach()).compareTo(other.isSetAttach());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAttach()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.attach, other.attach);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTime_end()).compareTo(other.isSetTime_end());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_end()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_end, other.time_end);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("WXPayNotify(");
    boolean first = true;

    sb.append("return_code:");
    if (this.return_code == null) {
      sb.append("null");
    } else {
      sb.append(this.return_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("return_msg:");
    if (this.return_msg == null) {
      sb.append("null");
    } else {
      sb.append(this.return_msg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("appid:");
    if (this.appid == null) {
      sb.append("null");
    } else {
      sb.append(this.appid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mch_id:");
    if (this.mch_id == null) {
      sb.append("null");
    } else {
      sb.append(this.mch_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("device_info:");
    if (this.device_info == null) {
      sb.append("null");
    } else {
      sb.append(this.device_info);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nonce_str:");
    if (this.nonce_str == null) {
      sb.append("null");
    } else {
      sb.append(this.nonce_str);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sign:");
    if (this.sign == null) {
      sb.append("null");
    } else {
      sb.append(this.sign);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("result_code:");
    if (this.result_code == null) {
      sb.append("null");
    } else {
      sb.append(this.result_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("err_code:");
    if (this.err_code == null) {
      sb.append("null");
    } else {
      sb.append(this.err_code);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("err_code_des:");
    if (this.err_code_des == null) {
      sb.append("null");
    } else {
      sb.append(this.err_code_des);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("openid:");
    if (this.openid == null) {
      sb.append("null");
    } else {
      sb.append(this.openid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_subscribe:");
    if (this.is_subscribe == null) {
      sb.append("null");
    } else {
      sb.append(this.is_subscribe);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("trade_type:");
    if (this.trade_type == null) {
      sb.append("null");
    } else {
      sb.append(this.trade_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bank_type:");
    if (this.bank_type == null) {
      sb.append("null");
    } else {
      sb.append(this.bank_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("total_fee:");
    sb.append(this.total_fee);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fee_type:");
    if (this.fee_type == null) {
      sb.append("null");
    } else {
      sb.append(this.fee_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cash_fee:");
    sb.append(this.cash_fee);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cash_fee_type:");
    if (this.cash_fee_type == null) {
      sb.append("null");
    } else {
      sb.append(this.cash_fee_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("coupon_fee:");
    sb.append(this.coupon_fee);
    first = false;
    if (!first) sb.append(", ");
    sb.append("coupon_count:");
    sb.append(this.coupon_count);
    first = false;
    if (!first) sb.append(", ");
    sb.append("coupon_id_0:");
    if (this.coupon_id_0 == null) {
      sb.append("null");
    } else {
      sb.append(this.coupon_id_0);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("coupon_fee_0:");
    sb.append(this.coupon_fee_0);
    first = false;
    if (!first) sb.append(", ");
    sb.append("transaction_id:");
    if (this.transaction_id == null) {
      sb.append("null");
    } else {
      sb.append(this.transaction_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("out_trade_no:");
    if (this.out_trade_no == null) {
      sb.append("null");
    } else {
      sb.append(this.out_trade_no);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("attach:");
    if (this.attach == null) {
      sb.append("null");
    } else {
      sb.append(this.attach);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("time_end:");
    if (this.time_end == null) {
      sb.append("null");
    } else {
      sb.append(this.time_end);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class WXPayNotifyStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WXPayNotifyStandardScheme getScheme() {
      return new WXPayNotifyStandardScheme();
    }
  }

  private static class WXPayNotifyStandardScheme extends org.apache.thrift.scheme.StandardScheme<WXPayNotify> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, WXPayNotify struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RETURN_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.return_code = iprot.readString();
              struct.setReturn_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // RETURN_MSG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.return_msg = iprot.readString();
              struct.setReturn_msgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // APPID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.appid = iprot.readString();
              struct.setAppidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MCH_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mch_id = iprot.readString();
              struct.setMch_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DEVICE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.device_info = iprot.readString();
              struct.setDevice_infoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NONCE_STR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nonce_str = iprot.readString();
              struct.setNonce_strIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SIGN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sign = iprot.readString();
              struct.setSignIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESULT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.result_code = iprot.readString();
              struct.setResult_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ERR_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.err_code = iprot.readString();
              struct.setErr_codeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ERR_CODE_DES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.err_code_des = iprot.readString();
              struct.setErr_code_desIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // OPENID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.openid = iprot.readString();
              struct.setOpenidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // IS_SUBSCRIBE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.is_subscribe = iprot.readString();
              struct.setIs_subscribeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // TRADE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trade_type = iprot.readString();
              struct.setTrade_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BANK_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bank_type = iprot.readString();
              struct.setBank_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TOTAL_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.total_fee = iprot.readI64();
              struct.setTotal_feeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // FEE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fee_type = iprot.readString();
              struct.setFee_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CASH_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.cash_fee = iprot.readI64();
              struct.setCash_feeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // CASH_FEE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cash_fee_type = iprot.readString();
              struct.setCash_fee_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // COUPON_FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.coupon_fee = iprot.readI64();
              struct.setCoupon_feeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // COUPON_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.coupon_count = iprot.readI64();
              struct.setCoupon_countIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // COUPON_ID_0
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.coupon_id_0 = iprot.readString();
              struct.setCoupon_id_0IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // COUPON_FEE_0
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.coupon_fee_0 = iprot.readI64();
              struct.setCoupon_fee_0IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TRANSACTION_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.transaction_id = iprot.readString();
              struct.setTransaction_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // OUT_TRADE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.out_trade_no = iprot.readString();
              struct.setOut_trade_noIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // ATTACH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.attach = iprot.readString();
              struct.setAttachIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // TIME_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.time_end = iprot.readString();
              struct.setTime_endIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, WXPayNotify struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.return_code != null) {
        oprot.writeFieldBegin(RETURN_CODE_FIELD_DESC);
        oprot.writeString(struct.return_code);
        oprot.writeFieldEnd();
      }
      if (struct.return_msg != null) {
        oprot.writeFieldBegin(RETURN_MSG_FIELD_DESC);
        oprot.writeString(struct.return_msg);
        oprot.writeFieldEnd();
      }
      if (struct.appid != null) {
        oprot.writeFieldBegin(APPID_FIELD_DESC);
        oprot.writeString(struct.appid);
        oprot.writeFieldEnd();
      }
      if (struct.mch_id != null) {
        oprot.writeFieldBegin(MCH_ID_FIELD_DESC);
        oprot.writeString(struct.mch_id);
        oprot.writeFieldEnd();
      }
      if (struct.device_info != null) {
        oprot.writeFieldBegin(DEVICE_INFO_FIELD_DESC);
        oprot.writeString(struct.device_info);
        oprot.writeFieldEnd();
      }
      if (struct.nonce_str != null) {
        oprot.writeFieldBegin(NONCE_STR_FIELD_DESC);
        oprot.writeString(struct.nonce_str);
        oprot.writeFieldEnd();
      }
      if (struct.sign != null) {
        oprot.writeFieldBegin(SIGN_FIELD_DESC);
        oprot.writeString(struct.sign);
        oprot.writeFieldEnd();
      }
      if (struct.result_code != null) {
        oprot.writeFieldBegin(RESULT_CODE_FIELD_DESC);
        oprot.writeString(struct.result_code);
        oprot.writeFieldEnd();
      }
      if (struct.err_code != null) {
        oprot.writeFieldBegin(ERR_CODE_FIELD_DESC);
        oprot.writeString(struct.err_code);
        oprot.writeFieldEnd();
      }
      if (struct.err_code_des != null) {
        oprot.writeFieldBegin(ERR_CODE_DES_FIELD_DESC);
        oprot.writeString(struct.err_code_des);
        oprot.writeFieldEnd();
      }
      if (struct.openid != null) {
        oprot.writeFieldBegin(OPENID_FIELD_DESC);
        oprot.writeString(struct.openid);
        oprot.writeFieldEnd();
      }
      if (struct.is_subscribe != null) {
        oprot.writeFieldBegin(IS_SUBSCRIBE_FIELD_DESC);
        oprot.writeString(struct.is_subscribe);
        oprot.writeFieldEnd();
      }
      if (struct.trade_type != null) {
        oprot.writeFieldBegin(TRADE_TYPE_FIELD_DESC);
        oprot.writeString(struct.trade_type);
        oprot.writeFieldEnd();
      }
      if (struct.bank_type != null) {
        oprot.writeFieldBegin(BANK_TYPE_FIELD_DESC);
        oprot.writeString(struct.bank_type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_FEE_FIELD_DESC);
      oprot.writeI64(struct.total_fee);
      oprot.writeFieldEnd();
      if (struct.fee_type != null) {
        oprot.writeFieldBegin(FEE_TYPE_FIELD_DESC);
        oprot.writeString(struct.fee_type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CASH_FEE_FIELD_DESC);
      oprot.writeI64(struct.cash_fee);
      oprot.writeFieldEnd();
      if (struct.cash_fee_type != null) {
        oprot.writeFieldBegin(CASH_FEE_TYPE_FIELD_DESC);
        oprot.writeString(struct.cash_fee_type);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COUPON_FEE_FIELD_DESC);
      oprot.writeI64(struct.coupon_fee);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUPON_COUNT_FIELD_DESC);
      oprot.writeI64(struct.coupon_count);
      oprot.writeFieldEnd();
      if (struct.coupon_id_0 != null) {
        oprot.writeFieldBegin(COUPON_ID_0_FIELD_DESC);
        oprot.writeString(struct.coupon_id_0);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COUPON_FEE_0_FIELD_DESC);
      oprot.writeI64(struct.coupon_fee_0);
      oprot.writeFieldEnd();
      if (struct.transaction_id != null) {
        oprot.writeFieldBegin(TRANSACTION_ID_FIELD_DESC);
        oprot.writeString(struct.transaction_id);
        oprot.writeFieldEnd();
      }
      if (struct.out_trade_no != null) {
        oprot.writeFieldBegin(OUT_TRADE_NO_FIELD_DESC);
        oprot.writeString(struct.out_trade_no);
        oprot.writeFieldEnd();
      }
      if (struct.attach != null) {
        oprot.writeFieldBegin(ATTACH_FIELD_DESC);
        oprot.writeString(struct.attach);
        oprot.writeFieldEnd();
      }
      if (struct.time_end != null) {
        oprot.writeFieldBegin(TIME_END_FIELD_DESC);
        oprot.writeString(struct.time_end);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class WXPayNotifyTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public WXPayNotifyTupleScheme getScheme() {
      return new WXPayNotifyTupleScheme();
    }
  }

  private static class WXPayNotifyTupleScheme extends org.apache.thrift.scheme.TupleScheme<WXPayNotify> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, WXPayNotify struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetReturn_code()) {
        optionals.set(0);
      }
      if (struct.isSetReturn_msg()) {
        optionals.set(1);
      }
      if (struct.isSetAppid()) {
        optionals.set(2);
      }
      if (struct.isSetMch_id()) {
        optionals.set(3);
      }
      if (struct.isSetDevice_info()) {
        optionals.set(4);
      }
      if (struct.isSetNonce_str()) {
        optionals.set(5);
      }
      if (struct.isSetSign()) {
        optionals.set(6);
      }
      if (struct.isSetResult_code()) {
        optionals.set(7);
      }
      if (struct.isSetErr_code()) {
        optionals.set(8);
      }
      if (struct.isSetErr_code_des()) {
        optionals.set(9);
      }
      if (struct.isSetOpenid()) {
        optionals.set(10);
      }
      if (struct.isSetIs_subscribe()) {
        optionals.set(11);
      }
      if (struct.isSetTrade_type()) {
        optionals.set(12);
      }
      if (struct.isSetBank_type()) {
        optionals.set(13);
      }
      if (struct.isSetTotal_fee()) {
        optionals.set(14);
      }
      if (struct.isSetFee_type()) {
        optionals.set(15);
      }
      if (struct.isSetCash_fee()) {
        optionals.set(16);
      }
      if (struct.isSetCash_fee_type()) {
        optionals.set(17);
      }
      if (struct.isSetCoupon_fee()) {
        optionals.set(18);
      }
      if (struct.isSetCoupon_count()) {
        optionals.set(19);
      }
      if (struct.isSetCoupon_id_0()) {
        optionals.set(20);
      }
      if (struct.isSetCoupon_fee_0()) {
        optionals.set(21);
      }
      if (struct.isSetTransaction_id()) {
        optionals.set(22);
      }
      if (struct.isSetOut_trade_no()) {
        optionals.set(23);
      }
      if (struct.isSetAttach()) {
        optionals.set(24);
      }
      if (struct.isSetTime_end()) {
        optionals.set(25);
      }
      oprot.writeBitSet(optionals, 26);
      if (struct.isSetReturn_code()) {
        oprot.writeString(struct.return_code);
      }
      if (struct.isSetReturn_msg()) {
        oprot.writeString(struct.return_msg);
      }
      if (struct.isSetAppid()) {
        oprot.writeString(struct.appid);
      }
      if (struct.isSetMch_id()) {
        oprot.writeString(struct.mch_id);
      }
      if (struct.isSetDevice_info()) {
        oprot.writeString(struct.device_info);
      }
      if (struct.isSetNonce_str()) {
        oprot.writeString(struct.nonce_str);
      }
      if (struct.isSetSign()) {
        oprot.writeString(struct.sign);
      }
      if (struct.isSetResult_code()) {
        oprot.writeString(struct.result_code);
      }
      if (struct.isSetErr_code()) {
        oprot.writeString(struct.err_code);
      }
      if (struct.isSetErr_code_des()) {
        oprot.writeString(struct.err_code_des);
      }
      if (struct.isSetOpenid()) {
        oprot.writeString(struct.openid);
      }
      if (struct.isSetIs_subscribe()) {
        oprot.writeString(struct.is_subscribe);
      }
      if (struct.isSetTrade_type()) {
        oprot.writeString(struct.trade_type);
      }
      if (struct.isSetBank_type()) {
        oprot.writeString(struct.bank_type);
      }
      if (struct.isSetTotal_fee()) {
        oprot.writeI64(struct.total_fee);
      }
      if (struct.isSetFee_type()) {
        oprot.writeString(struct.fee_type);
      }
      if (struct.isSetCash_fee()) {
        oprot.writeI64(struct.cash_fee);
      }
      if (struct.isSetCash_fee_type()) {
        oprot.writeString(struct.cash_fee_type);
      }
      if (struct.isSetCoupon_fee()) {
        oprot.writeI64(struct.coupon_fee);
      }
      if (struct.isSetCoupon_count()) {
        oprot.writeI64(struct.coupon_count);
      }
      if (struct.isSetCoupon_id_0()) {
        oprot.writeString(struct.coupon_id_0);
      }
      if (struct.isSetCoupon_fee_0()) {
        oprot.writeI64(struct.coupon_fee_0);
      }
      if (struct.isSetTransaction_id()) {
        oprot.writeString(struct.transaction_id);
      }
      if (struct.isSetOut_trade_no()) {
        oprot.writeString(struct.out_trade_no);
      }
      if (struct.isSetAttach()) {
        oprot.writeString(struct.attach);
      }
      if (struct.isSetTime_end()) {
        oprot.writeString(struct.time_end);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, WXPayNotify struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(26);
      if (incoming.get(0)) {
        struct.return_code = iprot.readString();
        struct.setReturn_codeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.return_msg = iprot.readString();
        struct.setReturn_msgIsSet(true);
      }
      if (incoming.get(2)) {
        struct.appid = iprot.readString();
        struct.setAppidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.mch_id = iprot.readString();
        struct.setMch_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.device_info = iprot.readString();
        struct.setDevice_infoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.nonce_str = iprot.readString();
        struct.setNonce_strIsSet(true);
      }
      if (incoming.get(6)) {
        struct.sign = iprot.readString();
        struct.setSignIsSet(true);
      }
      if (incoming.get(7)) {
        struct.result_code = iprot.readString();
        struct.setResult_codeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.err_code = iprot.readString();
        struct.setErr_codeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.err_code_des = iprot.readString();
        struct.setErr_code_desIsSet(true);
      }
      if (incoming.get(10)) {
        struct.openid = iprot.readString();
        struct.setOpenidIsSet(true);
      }
      if (incoming.get(11)) {
        struct.is_subscribe = iprot.readString();
        struct.setIs_subscribeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.trade_type = iprot.readString();
        struct.setTrade_typeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.bank_type = iprot.readString();
        struct.setBank_typeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.total_fee = iprot.readI64();
        struct.setTotal_feeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.fee_type = iprot.readString();
        struct.setFee_typeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.cash_fee = iprot.readI64();
        struct.setCash_feeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cash_fee_type = iprot.readString();
        struct.setCash_fee_typeIsSet(true);
      }
      if (incoming.get(18)) {
        struct.coupon_fee = iprot.readI64();
        struct.setCoupon_feeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.coupon_count = iprot.readI64();
        struct.setCoupon_countIsSet(true);
      }
      if (incoming.get(20)) {
        struct.coupon_id_0 = iprot.readString();
        struct.setCoupon_id_0IsSet(true);
      }
      if (incoming.get(21)) {
        struct.coupon_fee_0 = iprot.readI64();
        struct.setCoupon_fee_0IsSet(true);
      }
      if (incoming.get(22)) {
        struct.transaction_id = iprot.readString();
        struct.setTransaction_idIsSet(true);
      }
      if (incoming.get(23)) {
        struct.out_trade_no = iprot.readString();
        struct.setOut_trade_noIsSet(true);
      }
      if (incoming.get(24)) {
        struct.attach = iprot.readString();
        struct.setAttachIsSet(true);
      }
      if (incoming.get(25)) {
        struct.time_end = iprot.readString();
        struct.setTime_endIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

